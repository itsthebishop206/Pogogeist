                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module projectiles
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _rand
                                     12 	.globl _boneCounter
                                     13 	.globl _prSpd
                                     14 	.globl _prY
                                     15 	.globl _prX
                                     16 	.globl _bones
                                     17 	.globl _initBoneTable
                                     18 	.globl _throwBone
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _DATA
    00000000                         26 _bones::
    00000000                         27 	.ds 36
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _INITIALIZED
    00000000                         32 _prX::
    00000000                         33 	.ds 1
    00000001                         34 _prY::
    00000001                         35 	.ds 1
    00000002                         36 _prSpd::
    00000002                         37 	.ds 1
    00000003                         38 _boneCounter::
    00000003                         39 	.ds 1
                                     40 ;--------------------------------------------------------
                                     41 ; absolute external ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area _DABS (ABS)
                                     44 ;--------------------------------------------------------
                                     45 ; global & static initialisations
                                     46 ;--------------------------------------------------------
                                     47 	.area _HOME
                                     48 	.area _GSINIT
                                     49 	.area _GSFINAL
                                     50 	.area _GSINIT
                                     51 ;--------------------------------------------------------
                                     52 ; Home
                                     53 ;--------------------------------------------------------
                                     54 	.area _HOME
                                     55 	.area _HOME
                                     56 ;--------------------------------------------------------
                                     57 ; code
                                     58 ;--------------------------------------------------------
                                     59 	.area _CODE
                                     60 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:65: void initBoneTable(void){
                                     61 ;	---------------------------------
                                     62 ; Function initBoneTable
                                     63 ; ---------------------------------
    00000000                         64 _initBoneTable::
    00000000 E8 FD            [16]   65 	add	sp, #-3
                                     66 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:69: for(uint8_t b = 0; b < MAX_BONE; b++){
    00000002 F8 02            [12]   67 	ldhl	sp,	#2
    00000004 36 00            [12]   68 	ld	(hl), #0x00
    00000006                         69 00114$:
    00000006 F8 02            [12]   70 	ldhl	sp,	#2
    00000008 7E               [ 8]   71 	ld	a, (hl)
    00000009 D6 06            [ 8]   72 	sub	a, #0x06
    0000000B D2r8Fr00         [16]   73 	jp	NC, 00116$
                                     74 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:71: bones[b].active = 0;
    0000000E 4E               [ 8]   75 	ld	c, (hl)
    0000000F 06 00            [ 8]   76 	ld	b, #0x00
    00000011 69               [ 4]   77 	ld	l, c
    00000012 60               [ 4]   78 	ld	h, b
    00000013 29               [ 8]   79 	add	hl, hl
    00000014 09               [ 8]   80 	add	hl, bc
    00000015 29               [ 8]   81 	add	hl, hl
    00000016 01r00r00         [12]   82 	ld	bc,#_bones
    00000019 09               [ 8]   83 	add	hl,bc
    0000001A 33               [ 8]   84 	inc	sp
    0000001B 33               [ 8]   85 	inc	sp
    0000001C 4D               [ 4]   86 	ld	c, l
    0000001D 44               [ 4]   87 	ld	b, h
    0000001E C5               [16]   88 	push	bc
    0000001F 03               [ 8]   89 	inc	bc
    00000020 03               [ 8]   90 	inc	bc
    00000021 03               [ 8]   91 	inc	bc
    00000022 AF               [ 4]   92 	xor	a, a
    00000023 02               [ 8]   93 	ld	(bc), a
                                     94 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:73: uint8_t r = ((uint8_t)rand()) % (uint8_t)4;
    00000024 CDr00r00         [24]   95 	call	_rand
    00000027 7B               [ 4]   96 	ld	a, e
                                     97 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:74: if(r==0){
    00000028 E6 03            [ 8]   98 	and	a,#0x03
    0000002A 20 0C            [12]   99 	jr	NZ, 00110$
                                    100 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:75: prX = 0;
    0000002C 21r00r00         [12]  101 	ld	hl, #_prX
    0000002F 36 00            [12]  102 	ld	(hl), #0x00
                                    103 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:76: prY = 0;
    00000031 21r01r00         [12]  104 	ld	hl, #_prY
    00000034 36 00            [12]  105 	ld	(hl), #0x00
    00000036 18 2E            [12]  106 	jr	00111$
    00000038                        107 00110$:
                                    108 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:77: } else if(r==1){
    00000038 FE 01            [ 8]  109 	cp	a, #0x01
    0000003A 20 0C            [12]  110 	jr	NZ, 00107$
                                    111 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:78: prX = 160;
    0000003C 21r00r00         [12]  112 	ld	hl, #_prX
    0000003F 36 A0            [12]  113 	ld	(hl), #0xa0
                                    114 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:79: prY = 0;
    00000041 21r01r00         [12]  115 	ld	hl, #_prY
    00000044 36 00            [12]  116 	ld	(hl), #0x00
    00000046 18 1E            [12]  117 	jr	00111$
    00000048                        118 00107$:
                                    119 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:80: } else if(r==2){
    00000048 FE 02            [ 8]  120 	cp	a, #0x02
    0000004A 20 0C            [12]  121 	jr	NZ, 00104$
                                    122 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:81: prX = 160;
    0000004C 21r00r00         [12]  123 	ld	hl, #_prX
    0000004F 36 A0            [12]  124 	ld	(hl), #0xa0
                                    125 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:82: prY = 144;
    00000051 21r01r00         [12]  126 	ld	hl, #_prY
    00000054 36 90            [12]  127 	ld	(hl), #0x90
    00000056 18 0E            [12]  128 	jr	00111$
    00000058                        129 00104$:
                                    130 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:83: } else if(r==3){
    00000058 D6 03            [ 8]  131 	sub	a, #0x03
    0000005A 20 0A            [12]  132 	jr	NZ, 00111$
                                    133 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:84: prX = 0;
    0000005C 21r00r00         [12]  134 	ld	hl, #_prX
    0000005F 36 00            [12]  135 	ld	(hl), #0x00
                                    136 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:85: prY = 144;
    00000061 21r01r00         [12]  137 	ld	hl, #_prY
    00000064 36 90            [12]  138 	ld	(hl), #0x90
    00000066                        139 00111$:
                                    140 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:88: bones[b].metasprite = boneMS;
    00000066 D1               [12]  141 	pop	de
    00000067 D5               [16]  142 	push	de
    00000068 21 04 00         [12]  143 	ld	hl, #0x0004
    0000006B 19               [ 8]  144 	add	hl, de
    0000006C 4D               [ 4]  145 	ld	c, l
    0000006D 44               [ 4]  146 	ld	b, h
    0000006E 36r00            [12]  147 	ld	(hl), #<(_boneMS)
    00000070 03               [ 8]  148 	inc	bc
    00000071 3Es00            [ 8]  149 	ld	a, #>(_boneMS)
    00000073 02               [ 8]  150 	ld	(bc), a
                                    151 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:89: bones[b].x = prX;
    00000074 D1               [12]  152 	pop	de
    00000075 D5               [16]  153 	push	de
    00000076 FAr00r00         [16]  154 	ld	a, (#_prX)
    00000079 12               [ 8]  155 	ld	(de), a
                                    156 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:90: bones[b].y = prY;
    0000007A C1               [12]  157 	pop	bc
    0000007B C5               [16]  158 	push	bc
    0000007C 03               [ 8]  159 	inc	bc
    0000007D FAr01r00         [16]  160 	ld	a, (#_prY)
    00000080 02               [ 8]  161 	ld	(bc), a
                                    162 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:91: bones[b].speed = prSpd;
    00000081 C1               [12]  163 	pop	bc
    00000082 C5               [16]  164 	push	bc
    00000083 03               [ 8]  165 	inc	bc
    00000084 03               [ 8]  166 	inc	bc
    00000085 FAr02r00         [16]  167 	ld	a, (#_prSpd)
    00000088 02               [ 8]  168 	ld	(bc), a
                                    169 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:69: for(uint8_t b = 0; b < MAX_BONE; b++){
    00000089 F8 02            [12]  170 	ldhl	sp,	#2
    0000008B 34               [12]  171 	inc	(hl)
    0000008C C3r06r00         [16]  172 	jp	00114$
    0000008F                        173 00116$:
                                    174 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:94: }
    0000008F E8 03            [16]  175 	add	sp, #3
    00000091 C9               [16]  176 	ret
                                    177 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:96: void throwBone(void){
                                    178 ;	---------------------------------
                                    179 ; Function throwBone
                                    180 ; ---------------------------------
    00000092                        181 _throwBone::
                                    182 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:112: if(bones[boneCounter].x < ghostyX){
                                    183 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:118: }
    00000092 C9               [16]  184 	ret
                                    185 	.area _CODE
                                    186 	.area _INITIALIZER
    00000000                        187 __xinit__prX:
    00000000 00                     188 	.db #0x00	; 0
    00000001                        189 __xinit__prY:
    00000001 00                     190 	.db #0x00	; 0
    00000002                        191 __xinit__prSpd:
    00000002 00                     192 	.db #0x00	; 0
    00000003                        193 __xinit__boneCounter:
    00000003 00                     194 	.db #0x00	; 0
                                    195 	.area _CABS (ABS)
