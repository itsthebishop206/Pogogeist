                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module projectiles
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _rand
                                     12 	.globl _boneCounter
                                     13 	.globl _pSpd
                                     14 	.globl _pY
                                     15 	.globl _pX
                                     16 	.globl _bones
                                     17 	.globl _initBoneTable
                                     18 	.globl _throwBone
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _DATA
    00000000                         26 _bones::
    00000000                         27 	.ds 36
                                     28 ;--------------------------------------------------------
                                     29 ; ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _INITIALIZED
    00000000                         32 _pX::
    00000000                         33 	.ds 1
    00000001                         34 _pY::
    00000001                         35 	.ds 1
    00000002                         36 _pSpd::
    00000002                         37 	.ds 1
    00000003                         38 _boneCounter::
    00000003                         39 	.ds 1
                                     40 ;--------------------------------------------------------
                                     41 ; absolute external ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area _DABS (ABS)
                                     44 ;--------------------------------------------------------
                                     45 ; global & static initialisations
                                     46 ;--------------------------------------------------------
                                     47 	.area _HOME
                                     48 	.area _GSINIT
                                     49 	.area _GSFINAL
                                     50 	.area _GSINIT
                                     51 ;--------------------------------------------------------
                                     52 ; Home
                                     53 ;--------------------------------------------------------
                                     54 	.area _HOME
                                     55 	.area _HOME
                                     56 ;--------------------------------------------------------
                                     57 ; code
                                     58 ;--------------------------------------------------------
                                     59 	.area _CODE
                                     60 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:66: void initBoneTable(void){
                                     61 ;	---------------------------------
                                     62 ; Function initBoneTable
                                     63 ; ---------------------------------
    00000000                         64 _initBoneTable::
    00000000 3B               [ 8]   65 	dec	sp
                                     66 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:69: for(uint8_t b = 0; b < MAX_BONE; b++){
    00000001 F8 00            [12]   67 	ldhl	sp,	#0
    00000003 36 00            [12]   68 	ld	(hl), #0x00
    00000005                         69 00114$:
    00000005 F8 00            [12]   70 	ldhl	sp,	#0
    00000007 7E               [ 8]   71 	ld	a, (hl)
    00000008 D6 06            [ 8]   72 	sub	a, #0x06
    0000000A 30 7B            [12]   73 	jr	NC, 00116$
                                     74 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:71: uint8_t r = ((uint8_t)rand()) % (uint8_t)4;
    0000000C CDr00r00         [24]   75 	call	_rand
    0000000F 7B               [ 4]   76 	ld	a, e
                                     77 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:72: if(r==0){
    00000010 E6 03            [ 8]   78 	and	a,#0x03
    00000012 20 0C            [12]   79 	jr	NZ, 00110$
                                     80 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:73: pX = 0;
    00000014 21r00r00         [12]   81 	ld	hl, #_pX
    00000017 36 00            [12]   82 	ld	(hl), #0x00
                                     83 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:74: pY = 0;
    00000019 21r01r00         [12]   84 	ld	hl, #_pY
    0000001C 36 00            [12]   85 	ld	(hl), #0x00
    0000001E 18 2E            [12]   86 	jr	00111$
    00000020                         87 00110$:
                                     88 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:75: } else if(r==1){
    00000020 FE 01            [ 8]   89 	cp	a, #0x01
    00000022 20 0C            [12]   90 	jr	NZ, 00107$
                                     91 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:76: pX = 160;
    00000024 21r00r00         [12]   92 	ld	hl, #_pX
    00000027 36 A0            [12]   93 	ld	(hl), #0xa0
                                     94 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:77: pY = 0;
    00000029 21r01r00         [12]   95 	ld	hl, #_pY
    0000002C 36 00            [12]   96 	ld	(hl), #0x00
    0000002E 18 1E            [12]   97 	jr	00111$
    00000030                         98 00107$:
                                     99 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:78: } else if(r==2){
    00000030 FE 02            [ 8]  100 	cp	a, #0x02
    00000032 20 0C            [12]  101 	jr	NZ, 00104$
                                    102 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:79: pX = 160;
    00000034 21r00r00         [12]  103 	ld	hl, #_pX
    00000037 36 A0            [12]  104 	ld	(hl), #0xa0
                                    105 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:80: pY = 144;
    00000039 21r01r00         [12]  106 	ld	hl, #_pY
    0000003C 36 90            [12]  107 	ld	(hl), #0x90
    0000003E 18 0E            [12]  108 	jr	00111$
    00000040                        109 00104$:
                                    110 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:81: } else if(r==3){
    00000040 D6 03            [ 8]  111 	sub	a, #0x03
    00000042 20 0A            [12]  112 	jr	NZ, 00111$
                                    113 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:82: pX = 0;
    00000044 21r00r00         [12]  114 	ld	hl, #_pX
    00000047 36 00            [12]  115 	ld	(hl), #0x00
                                    116 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:83: pY = 144;
    00000049 21r01r00         [12]  117 	ld	hl, #_pY
    0000004C 36 90            [12]  118 	ld	(hl), #0x90
    0000004E                        119 00111$:
                                    120 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:86: bones[b].metasprite = boneMS;
    0000004E F8 00            [12]  121 	ldhl	sp,	#0
    00000050 4E               [ 8]  122 	ld	c, (hl)
    00000051 06 00            [ 8]  123 	ld	b, #0x00
    00000053 69               [ 4]  124 	ld	l, c
    00000054 60               [ 4]  125 	ld	h, b
    00000055 29               [ 8]  126 	add	hl, hl
    00000056 09               [ 8]  127 	add	hl, bc
    00000057 29               [ 8]  128 	add	hl, hl
    00000058 7D               [ 4]  129 	ld	a, l
    00000059 C6r00            [ 8]  130 	add	a, #<(_bones)
    0000005B 4F               [ 4]  131 	ld	c, a
    0000005C 7C               [ 4]  132 	ld	a, h
    0000005D CEs00            [ 8]  133 	adc	a, #>(_bones)
    0000005F 47               [ 4]  134 	ld	b, a
    00000060 21 04 00         [12]  135 	ld	hl, #0x0004
    00000063 09               [ 8]  136 	add	hl, bc
    00000064 3Er00            [ 8]  137 	ld	a, #<(_boneMS)
    00000066 22               [ 8]  138 	ld	(hl+), a
    00000067 36s00            [12]  139 	ld	(hl), #>(_boneMS)
                                    140 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:87: bones[b].active = 1;
    00000069 69               [ 4]  141 	ld	l, c
                                    142 ;	spillPairReg hl
                                    143 ;	spillPairReg hl
    0000006A 60               [ 4]  144 	ld	h, b
                                    145 ;	spillPairReg hl
                                    146 ;	spillPairReg hl
    0000006B 23               [ 8]  147 	inc	hl
    0000006C 23               [ 8]  148 	inc	hl
    0000006D 23               [ 8]  149 	inc	hl
    0000006E 36 01            [12]  150 	ld	(hl), #0x01
                                    151 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:88: bones[b].x = pX;
    00000070 FAr00r00         [16]  152 	ld	a, (#_pX)
    00000073 02               [ 8]  153 	ld	(bc), a
                                    154 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:89: bones[b].y = pY;
    00000074 59               [ 4]  155 	ld	e, c
    00000075 50               [ 4]  156 	ld	d, b
    00000076 13               [ 8]  157 	inc	de
    00000077 FAr01r00         [16]  158 	ld	a, (#_pY)
    0000007A 12               [ 8]  159 	ld	(de), a
                                    160 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:90: bones[b].speed = pSpd;
    0000007B 03               [ 8]  161 	inc	bc
    0000007C 03               [ 8]  162 	inc	bc
    0000007D FAr02r00         [16]  163 	ld	a, (#_pSpd)
    00000080 02               [ 8]  164 	ld	(bc), a
                                    165 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:69: for(uint8_t b = 0; b < MAX_BONE; b++){
    00000081 F8 00            [12]  166 	ldhl	sp,	#0
    00000083 34               [12]  167 	inc	(hl)
    00000084 C3r05r00         [16]  168 	jp	00114$
    00000087                        169 00116$:
                                    170 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:93: }
    00000087 33               [ 8]  171 	inc	sp
    00000088 C9               [16]  172 	ret
                                    173 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:98: void throwBone(void){
                                    174 ;	---------------------------------
                                    175 ; Function throwBone
                                    176 ; ---------------------------------
    00000089                        177 _throwBone::
                                    178 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:115: if(bones[boneCounter].x < ghostyX){
                                    179 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:121: }
    00000089 C9               [16]  180 	ret
                                    181 	.area _CODE
                                    182 	.area _INITIALIZER
    00000000                        183 __xinit__pX:
    00000000 00                     184 	.db #0x00	; 0
    00000001                        185 __xinit__pY:
    00000001 00                     186 	.db #0x00	; 0
    00000002                        187 __xinit__pSpd:
    00000002 00                     188 	.db #0x00	; 0
    00000003                        189 __xinit__boneCounter:
    00000003 00                     190 	.db #0x00	; 0
                                    191 	.area _CABS (ABS)
