                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module projectiles
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _initRandXY
                                     12 	.globl _projSPCAlpha
                                     13 	.globl _rand
                                     14 	.globl _deltas
                                     15 	.globl _bones
                                     16 	.globl _initBoneTable
                                     17 	.globl _throwBone
                                     18 	.globl _updateBone
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _DATA
    00000000                         26 _ghostyX:
    00000000                         27 	.ds 2
    00000002                         28 _ghostyY:
    00000002                         29 	.ds 2
    00000004                         30 _ghostySpeedX:
    00000004                         31 	.ds 2
    00000006                         32 _ghostySpeedY:
    00000006                         33 	.ds 2
    00000008                         34 _pghostyX:
    00000008                         35 	.ds 2
    0000000A                         36 _pghostyY:
    0000000A                         37 	.ds 2
    0000000C                         38 _bones::
    0000000C                         39 	.ds 108
    00000078                         40 _deltas::
    00000078                         41 	.ds 2
    0000007A                         42 _updateBone_accumX_10001_223:
    0000007A                         43 	.ds 2
    0000007C                         44 _updateBone_accumY_10001_223:
    0000007C                         45 	.ds 2
                                     46 ;--------------------------------------------------------
                                     47 ; ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area _INITIALIZED
    00000000                         50 _boneCounter:
    00000000                         51 	.ds 1
    00000001                         52 _activeBones:
    00000001                         53 	.ds 1
    00000002                         54 _frameCounter:
    00000002                         55 	.ds 1
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area _DABS (ABS)
                                     60 ;--------------------------------------------------------
                                     61 ; global & static initialisations
                                     62 ;--------------------------------------------------------
                                     63 	.area _HOME
                                     64 	.area _GSINIT
                                     65 	.area _GSFINAL
                                     66 	.area _GSINIT
                                     67 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:120: static uint16_t accumX = 0;
    00000000 AF               [ 4]   68 	xor	a, a
    00000001 21r7Ar00         [12]   69 	ld	hl, #_updateBone_accumX_10001_223
    00000004 22               [ 8]   70 	ld	(hl+), a
    00000005 77               [ 8]   71 	ld	(hl), a
                                     72 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:121: static uint16_t accumY = 0;  
    00000006 AF               [ 4]   73 	xor	a, a
    00000007 21r7Cr00         [12]   74 	ld	hl, #_updateBone_accumY_10001_223
    0000000A 22               [ 8]   75 	ld	(hl+), a
    0000000B 77               [ 8]   76 	ld	(hl), a
                                     77 ;--------------------------------------------------------
                                     78 ; Home
                                     79 ;--------------------------------------------------------
                                     80 	.area _HOME
                                     81 	.area _HOME
                                     82 ;--------------------------------------------------------
                                     83 ; code
                                     84 ;--------------------------------------------------------
                                     85 	.area _CODE
                                     86 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:33: void initRandXY(int16_t* prX, int16_t* prY){
                                     87 ;	---------------------------------
                                     88 ; Function initRandXY
                                     89 ; ---------------------------------
    00000000                         90 _initRandXY::
                                     91 ;	spillPairReg hl
                                     92 ;	spillPairReg hl
                                     93 ;	spillPairReg hl
                                     94 ;	spillPairReg hl
                                     95 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:50: uint8_t r = ((uint8_t)rand()) % (uint8_t)4;
    00000000 D5               [16]   96 	push	de
    00000001 C5               [16]   97 	push	bc
    00000002 CDr00r00         [24]   98 	call	_rand
    00000005 7B               [ 4]   99 	ld	a, e
    00000006 C1               [12]  100 	pop	bc
    00000007 E1               [12]  101 	pop	hl
                                    102 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:51: if(r==0){
    00000008 E6 03            [ 8]  103 	and	a,#0x03
    0000000A 20 0C            [12]  104 	jr	NZ, 00110$
                                    105 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:52: *prX = 20;
    0000000C 3E 14            [ 8]  106 	ld	a, #0x14
    0000000E 22               [ 8]  107 	ld	(hl+), a
    0000000F 36 00            [12]  108 	ld	(hl), #0x00
                                    109 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:53: *prY = 20;
    00000011 3E 14            [ 8]  110 	ld	a, #0x14
    00000013 02               [ 8]  111 	ld	(bc), a
    00000014 03               [ 8]  112 	inc	bc
    00000015 AF               [ 4]  113 	xor	a, a
    00000016 02               [ 8]  114 	ld	(bc), a
    00000017 C9               [16]  115 	ret
    00000018                        116 00110$:
                                    117 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:54: } else if(r==1){
    00000018 FE 01            [ 8]  118 	cp	a, #0x01
    0000001A 20 0C            [12]  119 	jr	NZ, 00107$
                                    120 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:55: *prX = 130;
    0000001C 3E 82            [ 8]  121 	ld	a, #0x82
    0000001E 22               [ 8]  122 	ld	(hl+), a
    0000001F 36 00            [12]  123 	ld	(hl), #0x00
                                    124 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:56: *prY = 20;
    00000021 3E 14            [ 8]  125 	ld	a, #0x14
    00000023 02               [ 8]  126 	ld	(bc), a
    00000024 03               [ 8]  127 	inc	bc
    00000025 AF               [ 4]  128 	xor	a, a
    00000026 02               [ 8]  129 	ld	(bc), a
    00000027 C9               [16]  130 	ret
    00000028                        131 00107$:
                                    132 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:57: } else if(r==2){
    00000028 FE 02            [ 8]  133 	cp	a, #0x02
    0000002A 20 0C            [12]  134 	jr	NZ, 00104$
                                    135 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:58: *prX = 130;
    0000002C 3E 82            [ 8]  136 	ld	a, #0x82
    0000002E 22               [ 8]  137 	ld	(hl+), a
    0000002F 36 00            [12]  138 	ld	(hl), #0x00
                                    139 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:59: *prY = 130;
    00000031 3E 82            [ 8]  140 	ld	a, #0x82
    00000033 02               [ 8]  141 	ld	(bc), a
    00000034 03               [ 8]  142 	inc	bc
    00000035 AF               [ 4]  143 	xor	a, a
    00000036 02               [ 8]  144 	ld	(bc), a
    00000037 C9               [16]  145 	ret
    00000038                        146 00104$:
                                    147 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:60: } else if(r==3){
    00000038 D6 03            [ 8]  148 	sub	a, #0x03
    0000003A C0               [20]  149 	ret	NZ
                                    150 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:61: *prX = 20;
    0000003B 3E 14            [ 8]  151 	ld	a, #0x14
    0000003D 22               [ 8]  152 	ld	(hl+), a
    0000003E 36 00            [12]  153 	ld	(hl), #0x00
                                    154 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:62: *prY = 130;
    00000040 3E 82            [ 8]  155 	ld	a, #0x82
    00000042 02               [ 8]  156 	ld	(bc), a
    00000043 03               [ 8]  157 	inc	bc
    00000044 AF               [ 4]  158 	xor	a, a
    00000045 02               [ 8]  159 	ld	(bc), a
                                    160 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:64: }
    00000046 C9               [16]  161 	ret
                                    162 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:66: void initBoneTable(void){
                                    163 ;	---------------------------------
                                    164 ; Function initBoneTable
                                    165 ; ---------------------------------
    00000047                        166 _initBoneTable::
    00000047 E8 F3            [16]  167 	add	sp, #-13
                                    168 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:71: uint8_t oambt = 4;
    00000049 F8 02            [12]  169 	ldhl	sp,	#2
    0000004B 36 04            [12]  170 	ld	(hl), #0x04
                                    171 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:73: for(uint8_t b = 0; b < MAX_BONE; b++){
    0000004D F8 0C            [12]  172 	ldhl	sp,	#12
    0000004F 36 00            [12]  173 	ld	(hl), #0x00
    00000051                        174 00104$:
    00000051 F8 0C            [12]  175 	ldhl	sp,	#12
    00000053 7E               [ 8]  176 	ld	a, (hl)
    00000054 D6 06            [ 8]  177 	sub	a, #0x06
    00000056 D2rAFr01         [16]  178 	jp	NC, 00106$
                                    179 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:75: bones[b].x = 0;
    00000059 4E               [ 8]  180 	ld	c, (hl)
    0000005A 06 00            [ 8]  181 	ld	b, #0x00
    0000005C 69               [ 4]  182 	ld	l, c
    0000005D 60               [ 4]  183 	ld	h, b
    0000005E 29               [ 8]  184 	add	hl, hl
    0000005F 29               [ 8]  185 	add	hl, hl
    00000060 29               [ 8]  186 	add	hl, hl
    00000061 09               [ 8]  187 	add	hl, bc
    00000062 29               [ 8]  188 	add	hl, hl
    00000063 01r0Cr00         [12]  189 	ld	bc,#_bones
    00000066 09               [ 8]  190 	add	hl,bc
    00000067 E5               [16]  191 	push	hl
    00000068 7D               [ 4]  192 	ld	a, l
    00000069 F8 05            [12]  193 	ldhl	sp,	#5
    0000006B 77               [ 8]  194 	ld	(hl), a
    0000006C E1               [12]  195 	pop	hl
    0000006D 7C               [ 4]  196 	ld	a, h
    0000006E F8 04            [12]  197 	ldhl	sp,	#4
    00000070 32               [ 8]  198 	ld	(hl-), a
    00000071 2A               [ 8]  199 	ld	a,	(hl+)
    00000072 66               [ 8]  200 	ld	h, (hl)
    00000073 6F               [ 4]  201 	ld	l, a
    00000074 AF               [ 4]  202 	xor	a, a
    00000075 22               [ 8]  203 	ld	(hl+), a
    00000076 77               [ 8]  204 	ld	(hl), a
                                    205 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:76: bones[b].y = 0;
    00000077 F8 03            [12]  206 	ldhl	sp,#3
    00000079 2A               [ 8]  207 	ld	a, (hl+)
    0000007A 5F               [ 4]  208 	ld	e, a
    0000007B 56               [ 8]  209 	ld	d, (hl)
    0000007C 21 02 00         [12]  210 	ld	hl, #0x0002
    0000007F 19               [ 8]  211 	add	hl, de
    00000080 E5               [16]  212 	push	hl
    00000081 7D               [ 4]  213 	ld	a, l
    00000082 F8 07            [12]  214 	ldhl	sp,	#7
    00000084 77               [ 8]  215 	ld	(hl), a
    00000085 E1               [12]  216 	pop	hl
    00000086 7C               [ 4]  217 	ld	a, h
    00000087 F8 06            [12]  218 	ldhl	sp,	#6
    00000089 32               [ 8]  219 	ld	(hl-), a
    0000008A 2A               [ 8]  220 	ld	a,	(hl+)
    0000008B 66               [ 8]  221 	ld	h, (hl)
    0000008C 6F               [ 4]  222 	ld	l, a
    0000008D AF               [ 4]  223 	xor	a, a
    0000008E 22               [ 8]  224 	ld	(hl+), a
    0000008F 77               [ 8]  225 	ld	(hl), a
                                    226 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:77: bones[b].spdX = 0;
    00000090 F8 03            [12]  227 	ldhl	sp,#3
    00000092 2A               [ 8]  228 	ld	a, (hl+)
    00000093 5F               [ 4]  229 	ld	e, a
    00000094 56               [ 8]  230 	ld	d, (hl)
    00000095 21 08 00         [12]  231 	ld	hl, #0x0008
    00000098 19               [ 8]  232 	add	hl, de
    00000099 4D               [ 4]  233 	ld	c, l
    0000009A 44               [ 4]  234 	ld	b, h
    0000009B AF               [ 4]  235 	xor	a, a
    0000009C 02               [ 8]  236 	ld	(bc), a
    0000009D 03               [ 8]  237 	inc	bc
    0000009E 02               [ 8]  238 	ld	(bc), a
                                    239 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:78: bones[b].spdY = 0;
    0000009F F8 03            [12]  240 	ldhl	sp,#3
    000000A1 2A               [ 8]  241 	ld	a, (hl+)
    000000A2 5F               [ 4]  242 	ld	e, a
    000000A3 56               [ 8]  243 	ld	d, (hl)
    000000A4 21 0A 00         [12]  244 	ld	hl, #0x000a
    000000A7 19               [ 8]  245 	add	hl, de
    000000A8 4D               [ 4]  246 	ld	c, l
    000000A9 44               [ 4]  247 	ld	b, h
    000000AA AF               [ 4]  248 	xor	a, a
    000000AB 02               [ 8]  249 	ld	(bc), a
    000000AC 03               [ 8]  250 	inc	bc
    000000AD 02               [ 8]  251 	ld	(bc), a
                                    252 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:79: bones[b].active = 0;
    000000AE F8 03            [12]  253 	ldhl	sp,#3
    000000B0 2A               [ 8]  254 	ld	a, (hl+)
    000000B1 5F               [ 4]  255 	ld	e, a
    000000B2 56               [ 8]  256 	ld	d, (hl)
    000000B3 21 0C 00         [12]  257 	ld	hl, #0x000c
    000000B6 19               [ 8]  258 	add	hl, de
    000000B7 4D               [ 4]  259 	ld	c, l
    000000B8 44               [ 4]  260 	ld	b, h
    000000B9 AF               [ 4]  261 	xor	a, a
    000000BA 02               [ 8]  262 	ld	(bc), a
                                    263 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:80: bones[b].fired = 0;
    000000BB F8 03            [12]  264 	ldhl	sp,#3
    000000BD 2A               [ 8]  265 	ld	a, (hl+)
    000000BE 5F               [ 4]  266 	ld	e, a
    000000BF 56               [ 8]  267 	ld	d, (hl)
    000000C0 21 0D 00         [12]  268 	ld	hl, #0x000d
    000000C3 19               [ 8]  269 	add	hl, de
    000000C4 4D               [ 4]  270 	ld	c, l
    000000C5 44               [ 4]  271 	ld	b, h
    000000C6 AF               [ 4]  272 	xor	a, a
    000000C7 02               [ 8]  273 	ld	(bc), a
                                    274 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:81: bones[b].metasprite = boneMS;
    000000C8 F8 03            [12]  275 	ldhl	sp,#3
    000000CA 2A               [ 8]  276 	ld	a, (hl+)
    000000CB 5F               [ 4]  277 	ld	e, a
    000000CC 56               [ 8]  278 	ld	d, (hl)
    000000CD 21 10 00         [12]  279 	ld	hl, #0x0010
    000000D0 19               [ 8]  280 	add	hl, de
    000000D1 E5               [16]  281 	push	hl
    000000D2 7D               [ 4]  282 	ld	a, l
    000000D3 F8 09            [12]  283 	ldhl	sp,	#9
    000000D5 77               [ 8]  284 	ld	(hl), a
    000000D6 E1               [12]  285 	pop	hl
    000000D7 7C               [ 4]  286 	ld	a, h
    000000D8 F8 08            [12]  287 	ldhl	sp,	#8
    000000DA 32               [ 8]  288 	ld	(hl-), a
    000000DB 2A               [ 8]  289 	ld	a,	(hl+)
    000000DC 66               [ 8]  290 	ld	h, (hl)
    000000DD 6F               [ 4]  291 	ld	l, a
    000000DE 3Er00            [ 8]  292 	ld	a, #<(_boneMS)
    000000E0 22               [ 8]  293 	ld	(hl+), a
    000000E1 36s00            [12]  294 	ld	(hl), #>(_boneMS)
                                    295 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:82: bones[b].OAMindex = oambt;
    000000E3 F8 03            [12]  296 	ldhl	sp,#3
    000000E5 2A               [ 8]  297 	ld	a, (hl+)
    000000E6 5F               [ 4]  298 	ld	e, a
    000000E7 56               [ 8]  299 	ld	d, (hl)
    000000E8 21 0E 00         [12]  300 	ld	hl, #0x000e
    000000EB 19               [ 8]  301 	add	hl, de
    000000EC E5               [16]  302 	push	hl
    000000ED 7D               [ 4]  303 	ld	a, l
    000000EE F8 0B            [12]  304 	ldhl	sp,	#11
    000000F0 77               [ 8]  305 	ld	(hl), a
    000000F1 E1               [12]  306 	pop	hl
    000000F2 7C               [ 4]  307 	ld	a, h
    000000F3 F8 0A            [12]  308 	ldhl	sp,	#10
    000000F5 77               [ 8]  309 	ld	(hl), a
    000000F6 F8 02            [12]  310 	ldhl	sp,	#2
    000000F8 4E               [ 8]  311 	ld	c, (hl)
    000000F9 06 00            [ 8]  312 	ld	b, #0x00
    000000FB F8 09            [12]  313 	ldhl	sp,	#9
    000000FD 2A               [ 8]  314 	ld	a,	(hl+)
    000000FE 66               [ 8]  315 	ld	h, (hl)
    000000FF 6F               [ 4]  316 	ld	l, a
    00000100 79               [ 4]  317 	ld	a, c
    00000101 22               [ 8]  318 	ld	(hl+), a
    00000102 70               [ 8]  319 	ld	(hl), b
                                    320 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:86: initRandXY(&bones[b].x, &bones[b].y);
    00000103 F8 05            [12]  321 	ldhl	sp,	#5
    00000105 2A               [ 8]  322 	ld	a, (hl+)
    00000106 4F               [ 4]  323 	ld	c, a
    00000107 46               [ 8]  324 	ld	b, (hl)
    00000108 F8 03            [12]  325 	ldhl	sp,	#3
    0000010A 2A               [ 8]  326 	ld	a, (hl+)
    0000010B 5F               [ 4]  327 	ld	e, a
    0000010C 56               [ 8]  328 	ld	d, (hl)
    0000010D CDr00r00         [24]  329 	call	_initRandXY
                                    330 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:87: projSPCAlpha(&bones[b].x, ghostyX, &bones[b].y, ghostyY);
    00000110 F8 05            [12]  331 	ldhl	sp,	#5
    00000112 2A               [ 8]  332 	ld	a, (hl+)
    00000113 4F               [ 4]  333 	ld	c, a
    00000114 46               [ 8]  334 	ld	b, (hl)
    00000115 F8 03            [12]  335 	ldhl	sp,	#3
    00000117 2A               [ 8]  336 	ld	a, (hl+)
    00000118 5F               [ 4]  337 	ld	e, a
    00000119 56               [ 8]  338 	ld	d, (hl)
    0000011A 21r02r00         [12]  339 	ld	hl, #_ghostyY
    0000011D 6E               [ 8]  340 	ld	l, (hl)
                                    341 ;	spillPairReg hl
                                    342 ;	spillPairReg hl
    0000011E FAr03r00         [16]  343 	ld	a, (_ghostyY + 1)
    00000121 67               [ 4]  344 	ld	h, a
                                    345 ;	spillPairReg hl
                                    346 ;	spillPairReg hl
    00000122 E5               [16]  347 	push	hl
    00000123 C5               [16]  348 	push	bc
    00000124 21r00r00         [12]  349 	ld	hl, #_ghostyX
    00000127 2A               [ 8]  350 	ld	a, (hl+)
    00000128 4F               [ 4]  351 	ld	c, a
    00000129 46               [ 8]  352 	ld	b, (hl)
    0000012A CDr00r00         [24]  353 	call	_projSPCAlpha
                                    354 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:88: bones[b].deltaX = deltas[0];
    0000012D F8 03            [12]  355 	ldhl	sp,#3
    0000012F 2A               [ 8]  356 	ld	a, (hl+)
    00000130 5F               [ 4]  357 	ld	e, a
    00000131 56               [ 8]  358 	ld	d, (hl)
    00000132 21 04 00         [12]  359 	ld	hl, #0x0004
    00000135 19               [ 8]  360 	add	hl, de
    00000136 33               [ 8]  361 	inc	sp
    00000137 33               [ 8]  362 	inc	sp
    00000138 E5               [16]  363 	push	hl
    00000139 21r78r00         [12]  364 	ld	hl, #_deltas
    0000013C 6E               [ 8]  365 	ld	l, (hl)
                                    366 ;	spillPairReg hl
                                    367 ;	spillPairReg hl
    0000013D FAr79r00         [16]  368 	ld	a, (_deltas + 1)
    00000140 67               [ 4]  369 	ld	h, a
                                    370 ;	spillPairReg hl
                                    371 ;	spillPairReg hl
    00000141 2A               [ 8]  372 	ld	a, (hl+)
    00000142 4F               [ 4]  373 	ld	c, a
    00000143 46               [ 8]  374 	ld	b, (hl)
    00000144 E1               [12]  375 	pop	hl
    00000145 E5               [16]  376 	push	hl
    00000146 79               [ 4]  377 	ld	a, c
    00000147 22               [ 8]  378 	ld	(hl+), a
    00000148 70               [ 8]  379 	ld	(hl), b
                                    380 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:89: bones[b].deltaY = deltas[1];
    00000149 F8 03            [12]  381 	ldhl	sp,#3
    0000014B 2A               [ 8]  382 	ld	a, (hl+)
    0000014C 5F               [ 4]  383 	ld	e, a
    0000014D 56               [ 8]  384 	ld	d, (hl)
    0000014E 21 06 00         [12]  385 	ld	hl, #0x0006
    00000151 19               [ 8]  386 	add	hl, de
    00000152 33               [ 8]  387 	inc	sp
    00000153 33               [ 8]  388 	inc	sp
    00000154 E5               [16]  389 	push	hl
    00000155 21r78r00         [12]  390 	ld	hl, #_deltas
    00000158 2A               [ 8]  391 	ld	a, (hl+)
    00000159 4F               [ 4]  392 	ld	c, a
    0000015A 46               [ 8]  393 	ld	b, (hl)
    0000015B 69               [ 4]  394 	ld	l, c
    0000015C 60               [ 4]  395 	ld	h, b
    0000015D 23               [ 8]  396 	inc	hl
    0000015E 23               [ 8]  397 	inc	hl
    0000015F 2A               [ 8]  398 	ld	a, (hl+)
    00000160 4F               [ 4]  399 	ld	c, a
    00000161 46               [ 8]  400 	ld	b, (hl)
    00000162 E1               [12]  401 	pop	hl
    00000163 E5               [16]  402 	push	hl
    00000164 79               [ 4]  403 	ld	a, c
    00000165 22               [ 8]  404 	ld	(hl+), a
    00000166 70               [ 8]  405 	ld	(hl), b
                                    406 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:91: move_metasprite_ex(bones[b].metasprite,4,0,bones[b].OAMindex,bones[b].x,bones[b].y);
    00000167 F8 05            [12]  407 	ldhl	sp,#5
    00000169 2A               [ 8]  408 	ld	a, (hl+)
    0000016A 5F               [ 4]  409 	ld	e, a
    0000016B 56               [ 8]  410 	ld	d, (hl)
    0000016C 1A               [ 8]  411 	ld	a, (de)
    0000016D F8 0B            [12]  412 	ldhl	sp,	#11
    0000016F 77               [ 8]  413 	ld	(hl), a
    00000170 F8 03            [12]  414 	ldhl	sp,#3
    00000172 2A               [ 8]  415 	ld	a, (hl+)
    00000173 5F               [ 4]  416 	ld	e, a
    00000174 56               [ 8]  417 	ld	d, (hl)
    00000175 1A               [ 8]  418 	ld	a, (de)
    00000176 4F               [ 4]  419 	ld	c, a
    00000177 F8 09            [12]  420 	ldhl	sp,#9
    00000179 2A               [ 8]  421 	ld	a, (hl+)
    0000017A 5F               [ 4]  422 	ld	e, a
    0000017B 56               [ 8]  423 	ld	d, (hl)
    0000017C 1A               [ 8]  424 	ld	a, (de)
    0000017D 32               [ 8]  425 	ld	(hl-), a
    0000017E 2B               [ 8]  426 	dec	hl
    0000017F 2B               [ 8]  427 	dec	hl
    00000180 2A               [ 8]  428 	ld	a, (hl+)
    00000181 5F               [ 4]  429 	ld	e, a
    00000182 56               [ 8]  430 	ld	d, (hl)
    00000183 1A               [ 8]  431 	ld	a, (de)
    00000184 6F               [ 4]  432 	ld	l, a
                                    433 ;	spillPairReg hl
                                    434 ;	spillPairReg hl
    00000185 13               [ 8]  435 	inc	de
    00000186 1A               [ 8]  436 	ld	a, (de)
    00000187 67               [ 4]  437 	ld	h, a
                                    438 ;	spillPairReg hl
                                    439 ;	spillPairReg hl
                                    440 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:160: __current_metasprite = metasprite;
    00000188 5D               [ 4]  441 	ld	e, l
    00000189 54               [ 4]  442 	ld	d, h
    0000018A 21r00r00         [12]  443 	ld	hl, #___current_metasprite
    0000018D 7B               [ 4]  444 	ld	a, e
    0000018E 22               [ 8]  445 	ld	(hl+), a
    0000018F 72               [ 8]  446 	ld	(hl), d
                                    447 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:161: __current_base_tile = base_tile;
    00000190 21r00r00         [12]  448 	ld	hl, #___current_base_tile
    00000193 36 04            [12]  449 	ld	(hl), #0x04
                                    450 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:162: __current_base_prop = base_prop;
    00000195 21r00r00         [12]  451 	ld	hl, #___current_base_prop
    00000198 36 00            [12]  452 	ld	(hl), #0x00
                                    453 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:163: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
    0000019A F8 0B            [12]  454 	ldhl	sp,	#11
    0000019C 3A               [ 8]  455 	ld	a, (hl-)
    0000019D 57               [ 4]  456 	ld	d, a
    0000019E 59               [ 4]  457 	ld	e, c
    0000019F 7E               [ 8]  458 	ld	a, (hl)
    000001A0 CDr00r00         [24]  459 	call	___move_metasprite
                                    460 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:102: oambt += 2;
    000001A3 F8 02            [12]  461 	ldhl	sp,	#2
    000001A5 7E               [ 8]  462 	ld	a, (hl)
    000001A6 C6 02            [ 8]  463 	add	a, #0x02
    000001A8 77               [ 8]  464 	ld	(hl), a
                                    465 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:73: for(uint8_t b = 0; b < MAX_BONE; b++){
    000001A9 F8 0C            [12]  466 	ldhl	sp,	#12
    000001AB 34               [12]  467 	inc	(hl)
    000001AC C3r51r00         [16]  468 	jp	00104$
    000001AF                        469 00106$:
                                    470 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:104: }
    000001AF E8 0D            [16]  471 	add	sp, #13
    000001B1 C9               [16]  472 	ret
                                    473 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:106: void throwBone(uint8_t b){
                                    474 ;	---------------------------------
                                    475 ; Function throwBone
                                    476 ; ---------------------------------
    000001B2                        477 _throwBone::
    000001B2 4F               [ 4]  478 	ld	c, a
                                    479 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:108: if(frameCounter >= FRAME_PER_SPAWN){
    000001B3 FAr02r00         [16]  480 	ld	a, (#_frameCounter)
    000001B6 D6 4B            [ 8]  481 	sub	a, #0x4b
    000001B8 38 18            [12]  482 	jr	C, 00102$
                                    483 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:109: bones[b].fired = 1;
    000001BA 06 00            [ 8]  484 	ld	b, #0x00
    000001BC 69               [ 4]  485 	ld	l, c
    000001BD 60               [ 4]  486 	ld	h, b
    000001BE 29               [ 8]  487 	add	hl, hl
    000001BF 29               [ 8]  488 	add	hl, hl
    000001C0 29               [ 8]  489 	add	hl, hl
    000001C1 09               [ 8]  490 	add	hl, bc
    000001C2 29               [ 8]  491 	add	hl, hl
    000001C3 11r0Cr00         [12]  492 	ld	de, #_bones
    000001C6 19               [ 8]  493 	add	hl, de
    000001C7 01 0D 00         [12]  494 	ld	bc, #0x000d
    000001CA 09               [ 8]  495 	add	hl, bc
    000001CB 36 01            [12]  496 	ld	(hl), #0x01
                                    497 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:110: frameCounter = 0;
    000001CD 21r02r00         [12]  498 	ld	hl, #_frameCounter
    000001D0 36 00            [12]  499 	ld	(hl), #0x00
    000001D2                        500 00102$:
                                    501 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:113: frameCounter++;
    000001D2 21r02r00         [12]  502 	ld	hl, #_frameCounter
    000001D5 34               [12]  503 	inc	(hl)
                                    504 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:114: }
    000001D6 C9               [16]  505 	ret
                                    506 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:116: void updateBone(void){
                                    507 ;	---------------------------------
                                    508 ; Function updateBone
                                    509 ; ---------------------------------
    000001D7                        510 _updateBone::
    000001D7 E8 F5            [16]  511 	add	sp, #-11
                                    512 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:119: activeBones = 0; 
    000001D9 21r01r00         [12]  513 	ld	hl, #_activeBones
    000001DC 36 00            [12]  514 	ld	(hl), #0x00
                                    515 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:123: for(uint8_t b = 0; b < MAX_BONE; b++){            
    000001DE F8 0A            [12]  516 	ldhl	sp,	#10
    000001E0 36 00            [12]  517 	ld	(hl), #0x00
    000001E2                        518 00117$:
    000001E2 F8 0A            [12]  519 	ldhl	sp,	#10
    000001E4 7E               [ 8]  520 	ld	a, (hl)
    000001E5 D6 06            [ 8]  521 	sub	a, #0x06
    000001E7 D2r44r03         [16]  522 	jp	NC, 00119$
                                    523 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:125: accumX += bones[b].deltaX >> PIXEL_SHIFT;
    000001EA 4E               [ 8]  524 	ld	c, (hl)
    000001EB 06 00            [ 8]  525 	ld	b, #0x00
    000001ED 69               [ 4]  526 	ld	l, c
    000001EE 60               [ 4]  527 	ld	h, b
    000001EF 29               [ 8]  528 	add	hl, hl
    000001F0 29               [ 8]  529 	add	hl, hl
    000001F1 29               [ 8]  530 	add	hl, hl
    000001F2 09               [ 8]  531 	add	hl, bc
    000001F3 29               [ 8]  532 	add	hl, hl
    000001F4 01r0Cr00         [12]  533 	ld	bc,#_bones
    000001F7 09               [ 8]  534 	add	hl,bc
    000001F8 33               [ 8]  535 	inc	sp
    000001F9 33               [ 8]  536 	inc	sp
    000001FA 5D               [ 4]  537 	ld	e, l
    000001FB 54               [ 4]  538 	ld	d, h
    000001FC D5               [16]  539 	push	de
    000001FD 21 04 00         [12]  540 	ld	hl, #0x0004
    00000200 19               [ 8]  541 	add	hl, de
    00000201 2A               [ 8]  542 	ld	a, (hl+)
    00000202 4E               [ 8]  543 	ld	c, (hl)
    00000203 79               [ 4]  544 	ld	a, c
    00000204 07               [ 4]  545 	rlca
    00000205 9F               [ 4]  546 	sbc	a, a
    00000206 47               [ 4]  547 	ld	b, a
    00000207 21r7Ar00         [12]  548 	ld	hl, #_updateBone_accumX_10001_223
    0000020A 7E               [ 8]  549 	ld	a, (hl)
    0000020B 81               [ 4]  550 	add	a, c
    0000020C 22               [ 8]  551 	ld	(hl+), a
    0000020D 7E               [ 8]  552 	ld	a, (hl)
    0000020E 88               [ 4]  553 	adc	a, b
    0000020F 77               [ 8]  554 	ld	(hl), a
                                    555 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:126: accumY += bones[b].deltaY >> PIXEL_SHIFT;
    00000210 D1               [12]  556 	pop	de
    00000211 D5               [16]  557 	push	de
    00000212 21 06 00         [12]  558 	ld	hl, #0x0006
    00000215 19               [ 8]  559 	add	hl, de
    00000216 2A               [ 8]  560 	ld	a, (hl+)
    00000217 4E               [ 8]  561 	ld	c, (hl)
    00000218 79               [ 4]  562 	ld	a, c
    00000219 07               [ 4]  563 	rlca
    0000021A 9F               [ 4]  564 	sbc	a, a
    0000021B 47               [ 4]  565 	ld	b, a
    0000021C 21r7Cr00         [12]  566 	ld	hl, #_updateBone_accumY_10001_223
    0000021F 7E               [ 8]  567 	ld	a, (hl)
    00000220 81               [ 4]  568 	add	a, c
    00000221 22               [ 8]  569 	ld	(hl+), a
    00000222 7E               [ 8]  570 	ld	a, (hl)
    00000223 88               [ 4]  571 	adc	a, b
    00000224 77               [ 8]  572 	ld	(hl), a
                                    573 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:129: if((bones[b].x > PROJ_LEFT_BOUND) && (bones[b].x < PROJ_RIGHT_BOUND) && (bones[b].y < PROJ_BOT_BOUND) && (bones[b].y > PROJ_TOP_BOUND)){
    00000225 D1               [12]  574 	pop	de
    00000226 D5               [16]  575 	push	de
    00000227 1A               [ 8]  576 	ld	a, (de)
    00000228 F8 08            [12]  577 	ldhl	sp,	#8
    0000022A 22               [ 8]  578 	ld	(hl+), a
    0000022B 13               [ 8]  579 	inc	de
    0000022C 1A               [ 8]  580 	ld	a, (de)
    0000022D 77               [ 8]  581 	ld	(hl), a
    0000022E D1               [12]  582 	pop	de
    0000022F D5               [16]  583 	push	de
    00000230 21 02 00         [12]  584 	ld	hl, #0x0002
    00000233 19               [ 8]  585 	add	hl, de
    00000234 E5               [16]  586 	push	hl
    00000235 7D               [ 4]  587 	ld	a, l
    00000236 F8 04            [12]  588 	ldhl	sp,	#4
    00000238 77               [ 8]  589 	ld	(hl), a
    00000239 E1               [12]  590 	pop	hl
    0000023A 7C               [ 4]  591 	ld	a, h
    0000023B F8 03            [12]  592 	ldhl	sp,	#3
    0000023D 77               [ 8]  593 	ld	(hl), a
                                    594 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:131: bones[b].active = 1;
    0000023E D1               [12]  595 	pop	de
    0000023F D5               [16]  596 	push	de
    00000240 21 0C 00         [12]  597 	ld	hl, #0x000c
    00000243 19               [ 8]  598 	add	hl, de
    00000244 E5               [16]  599 	push	hl
    00000245 7D               [ 4]  600 	ld	a, l
    00000246 F8 06            [12]  601 	ldhl	sp,	#6
    00000248 77               [ 8]  602 	ld	(hl), a
    00000249 E1               [12]  603 	pop	hl
    0000024A 7C               [ 4]  604 	ld	a, h
    0000024B F8 05            [12]  605 	ldhl	sp,	#5
    0000024D 77               [ 8]  606 	ld	(hl), a
                                    607 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:129: if((bones[b].x > PROJ_LEFT_BOUND) && (bones[b].x < PROJ_RIGHT_BOUND) && (bones[b].y < PROJ_BOT_BOUND) && (bones[b].y > PROJ_TOP_BOUND)){
    0000024E F8 08            [12]  608 	ldhl	sp,	#8
    00000250 3E F1            [ 8]  609 	ld	a, #0xf1
    00000252 96               [ 8]  610 	sub	a, (hl)
    00000253 23               [ 8]  611 	inc	hl
    00000254 3E FF            [ 8]  612 	ld	a, #0xff
    00000256 9E               [ 8]  613 	sbc	a, (hl)
    00000257 3E FF            [ 8]  614 	ld	a, #0xff
    00000259 57               [ 4]  615 	ld	d, a
    0000025A CB 7E            [12]  616 	bit	7, (hl)
    0000025C 28 07            [12]  617 	jr	Z, 00192$
    0000025E CB 7A            [ 8]  618 	bit	7, d
    00000260 20 08            [12]  619 	jr	NZ, 00193$
    00000262 BF               [ 4]  620 	cp	a, a
    00000263 18 05            [12]  621 	jr	00193$
    00000265                        622 00192$:
    00000265 CB 7A            [ 8]  623 	bit	7, d
    00000267 28 01            [12]  624 	jr	Z, 00193$
    00000269 37               [ 4]  625 	scf
    0000026A                        626 00193$:
    0000026A 30 64            [12]  627 	jr	NC, 00102$
    0000026C F8 08            [12]  628 	ldhl	sp,	#8
    0000026E 2A               [ 8]  629 	ld	a, (hl+)
    0000026F 4F               [ 4]  630 	ld	c, a
    00000270 46               [ 8]  631 	ld	b, (hl)
    00000271 79               [ 4]  632 	ld	a, c
    00000272 D6 AF            [ 8]  633 	sub	a, #0xaf
    00000274 78               [ 4]  634 	ld	a, b
    00000275 17               [ 4]  635 	rla
    00000276 3F               [ 4]  636 	ccf
    00000277 1F               [ 4]  637 	rra
    00000278 DE 80            [ 8]  638 	sbc	a, #0x80
    0000027A 30 54            [12]  639 	jr	NC, 00102$
    0000027C F8 02            [12]  640 	ldhl	sp,#2
    0000027E 2A               [ 8]  641 	ld	a, (hl+)
    0000027F 5F               [ 4]  642 	ld	e, a
    00000280 56               [ 8]  643 	ld	d, (hl)
    00000281 1A               [ 8]  644 	ld	a, (de)
    00000282 F8 06            [12]  645 	ldhl	sp,	#6
    00000284 22               [ 8]  646 	ld	(hl+), a
    00000285 13               [ 8]  647 	inc	de
    00000286 1A               [ 8]  648 	ld	a, (de)
    00000287 32               [ 8]  649 	ld	(hl-), a
    00000288 2A               [ 8]  650 	ld	a, (hl+)
    00000289 23               [ 8]  651 	inc	hl
    0000028A 32               [ 8]  652 	ld	(hl-), a
    0000028B 2A               [ 8]  653 	ld	a, (hl+)
    0000028C 23               [ 8]  654 	inc	hl
    0000028D 32               [ 8]  655 	ld	(hl-), a
    0000028E 2A               [ 8]  656 	ld	a, (hl+)
    0000028F D6 9F            [ 8]  657 	sub	a, #0x9f
    00000291 7E               [ 8]  658 	ld	a, (hl)
    00000292 DE 00            [ 8]  659 	sbc	a, #0x00
    00000294 56               [ 8]  660 	ld	d, (hl)
    00000295 3E 00            [ 8]  661 	ld	a, #0x00
    00000297 CB 7F            [ 8]  662 	bit	7,a
    00000299 28 07            [12]  663 	jr	Z, 00194$
    0000029B CB 7A            [ 8]  664 	bit	7, d
    0000029D 20 08            [12]  665 	jr	NZ, 00195$
    0000029F BF               [ 4]  666 	cp	a, a
    000002A0 18 05            [12]  667 	jr	00195$
    000002A2                        668 00194$:
    000002A2 CB 7A            [ 8]  669 	bit	7, d
    000002A4 28 01            [12]  670 	jr	Z, 00195$
    000002A6 37               [ 4]  671 	scf
    000002A7                        672 00195$:
    000002A7 30 27            [12]  673 	jr	NC, 00102$
    000002A9 F8 06            [12]  674 	ldhl	sp,	#6
    000002AB 3E F1            [ 8]  675 	ld	a, #0xf1
    000002AD 96               [ 8]  676 	sub	a, (hl)
    000002AE 23               [ 8]  677 	inc	hl
    000002AF 3E FF            [ 8]  678 	ld	a, #0xff
    000002B1 9E               [ 8]  679 	sbc	a, (hl)
    000002B2 3E FF            [ 8]  680 	ld	a, #0xff
    000002B4 57               [ 4]  681 	ld	d, a
    000002B5 CB 7E            [12]  682 	bit	7, (hl)
    000002B7 28 07            [12]  683 	jr	Z, 00196$
    000002B9 CB 7A            [ 8]  684 	bit	7, d
    000002BB 20 08            [12]  685 	jr	NZ, 00197$
    000002BD BF               [ 4]  686 	cp	a, a
    000002BE 18 05            [12]  687 	jr	00197$
    000002C0                        688 00196$:
    000002C0 CB 7A            [ 8]  689 	bit	7, d
    000002C2 28 01            [12]  690 	jr	Z, 00197$
    000002C4 37               [ 4]  691 	scf
    000002C5                        692 00197$:
    000002C5 30 09            [12]  693 	jr	NC, 00102$
                                    694 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:131: bones[b].active = 1;
    000002C7 F8 04            [12]  695 	ldhl	sp,	#4
    000002C9 2A               [ 8]  696 	ld	a,	(hl+)
    000002CA 66               [ 8]  697 	ld	h, (hl)
    000002CB 6F               [ 4]  698 	ld	l, a
    000002CC 36 01            [12]  699 	ld	(hl), #0x01
    000002CE 18 07            [12]  700 	jr	00103$
    000002D0                        701 00102$:
                                    702 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:135: bones[b].active = 0;
    000002D0 F8 04            [12]  703 	ldhl	sp,	#4
    000002D2 2A               [ 8]  704 	ld	a,	(hl+)
    000002D3 66               [ 8]  705 	ld	h, (hl)
    000002D4 6F               [ 4]  706 	ld	l, a
    000002D5 36 00            [12]  707 	ld	(hl), #0x00
    000002D7                        708 00103$:
                                    709 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:138: if(!bones[b].fired && bones[b].active){
    000002D7 D1               [12]  710 	pop	de
    000002D8 D5               [16]  711 	push	de
    000002D9 21 0D 00         [12]  712 	ld	hl, #0x000d
    000002DC 19               [ 8]  713 	add	hl, de
    000002DD E5               [16]  714 	push	hl
    000002DE 7D               [ 4]  715 	ld	a, l
    000002DF F8 0A            [12]  716 	ldhl	sp,	#10
    000002E1 77               [ 8]  717 	ld	(hl), a
    000002E2 E1               [12]  718 	pop	hl
    000002E3 7C               [ 4]  719 	ld	a, h
    000002E4 F8 09            [12]  720 	ldhl	sp,	#9
    000002E6 32               [ 8]  721 	ld	(hl-), a
    000002E7 2A               [ 8]  722 	ld	a, (hl+)
    000002E8 5F               [ 4]  723 	ld	e, a
    000002E9 56               [ 8]  724 	ld	d, (hl)
    000002EA 1A               [ 8]  725 	ld	a, (de)
    000002EB B7               [ 4]  726 	or	a, a
    000002EC 20 0F            [12]  727 	jr	NZ, 00108$
    000002EE F8 04            [12]  728 	ldhl	sp,#4
    000002F0 2A               [ 8]  729 	ld	a, (hl+)
    000002F1 5F               [ 4]  730 	ld	e, a
    000002F2 56               [ 8]  731 	ld	d, (hl)
    000002F3 1A               [ 8]  732 	ld	a, (de)
    000002F4 B7               [ 4]  733 	or	a, a
    000002F5 28 06            [12]  734 	jr	Z, 00108$
                                    735 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:140: throwBone(b);
    000002F7 F8 0A            [12]  736 	ldhl	sp,	#10
    000002F9 7E               [ 8]  737 	ld	a, (hl)
    000002FA CDrB2r01         [24]  738 	call	_throwBone
    000002FD                        739 00108$:
                                    740 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:143: if(bones[b].active){
    000002FD F8 04            [12]  741 	ldhl	sp,#4
    000002FF 2A               [ 8]  742 	ld	a, (hl+)
    00000300 5F               [ 4]  743 	ld	e, a
    00000301 56               [ 8]  744 	ld	d, (hl)
    00000302 1A               [ 8]  745 	ld	a, (de)
    00000303 B7               [ 4]  746 	or	a, a
    00000304 28 06            [12]  747 	jr	Z, 00113$
                                    748 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:163: activeBones++;
    00000306 21r01r00         [12]  749 	ld	hl, #_activeBones
    00000309 34               [12]  750 	inc	(hl)
    0000030A 18 32            [12]  751 	jr	00118$
    0000030C                        752 00113$:
                                    753 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:165: } else if(!(bones[b].active)){
    0000030C B7               [ 4]  754 	or	a, a
    0000030D 20 2F            [12]  755 	jr	NZ, 00118$
                                    756 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:167: activeBones --;
    0000030F 21r01r00         [12]  757 	ld	hl, #_activeBones
    00000312 35               [12]  758 	dec	(hl)
                                    759 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:168: bones[b].fired = 0;
    00000313 F8 08            [12]  760 	ldhl	sp,	#8
    00000315 2A               [ 8]  761 	ld	a,	(hl+)
    00000316 66               [ 8]  762 	ld	h, (hl)
    00000317 6F               [ 4]  763 	ld	l, a
    00000318 36 00            [12]  764 	ld	(hl), #0x00
                                    765 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:169: initRandXY(&bones[b].x, &bones[b].y);
    0000031A F8 02            [12]  766 	ldhl	sp,	#2
    0000031C 2A               [ 8]  767 	ld	a, (hl+)
    0000031D 4F               [ 4]  768 	ld	c, a
    0000031E 46               [ 8]  769 	ld	b, (hl)
    0000031F D1               [12]  770 	pop	de
    00000320 D5               [16]  771 	push	de
    00000321 CDr00r00         [24]  772 	call	_initRandXY
                                    773 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:170: projSPCAlpha(&bones[b].x, ghostyX, &bones[b].y, ghostyY);
    00000324 F8 02            [12]  774 	ldhl	sp,	#2
    00000326 2A               [ 8]  775 	ld	a, (hl+)
    00000327 4F               [ 4]  776 	ld	c, a
    00000328 46               [ 8]  777 	ld	b, (hl)
    00000329 D1               [12]  778 	pop	de
    0000032A D5               [16]  779 	push	de
    0000032B 21r02r00         [12]  780 	ld	hl, #_ghostyY
    0000032E 6E               [ 8]  781 	ld	l, (hl)
                                    782 ;	spillPairReg hl
                                    783 ;	spillPairReg hl
    0000032F FAr03r00         [16]  784 	ld	a, (_ghostyY + 1)
    00000332 67               [ 4]  785 	ld	h, a
                                    786 ;	spillPairReg hl
                                    787 ;	spillPairReg hl
    00000333 E5               [16]  788 	push	hl
    00000334 C5               [16]  789 	push	bc
    00000335 21r00r00         [12]  790 	ld	hl, #_ghostyX
    00000338 2A               [ 8]  791 	ld	a, (hl+)
    00000339 4F               [ 4]  792 	ld	c, a
    0000033A 46               [ 8]  793 	ld	b, (hl)
    0000033B CDr00r00         [24]  794 	call	_projSPCAlpha
    0000033E                        795 00118$:
                                    796 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:123: for(uint8_t b = 0; b < MAX_BONE; b++){            
    0000033E F8 0A            [12]  797 	ldhl	sp,	#10
    00000340 34               [12]  798 	inc	(hl)
    00000341 C3rE2r01         [16]  799 	jp	00117$
    00000344                        800 00119$:
                                    801 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:180: }
    00000344 E8 0B            [16]  802 	add	sp, #11
    00000346 C9               [16]  803 	ret
                                    804 	.area _CODE
                                    805 	.area _INITIALIZER
    00000000                        806 __xinit__boneCounter:
    00000000 00                     807 	.db #0x00	; 0
    00000001                        808 __xinit__activeBones:
    00000001 00                     809 	.db #0x00	; 0
    00000002                        810 __xinit__frameCounter:
    00000002 00                     811 	.db #0x00	; 0
                                    812 	.area _CABS (ABS)
