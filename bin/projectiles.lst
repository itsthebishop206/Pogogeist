                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module projectiles
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _printf
                                     12 	.globl _rand
                                     13 	.globl _frameCounter
                                     14 	.globl _boneCounter
                                     15 	.globl _prSpd
                                     16 	.globl _prY
                                     17 	.globl _prX
                                     18 	.globl _bones
                                     19 	.globl _initBoneTable
                                     20 	.globl _throwBone
                                     21 ;--------------------------------------------------------
                                     22 ; special function registers
                                     23 ;--------------------------------------------------------
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DATA
    00000000                         28 _bones::
    00000000                         29 	.ds 36
                                     30 ;--------------------------------------------------------
                                     31 ; ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area _INITIALIZED
    00000000                         34 _prX::
    00000000                         35 	.ds 1
    00000001                         36 _prY::
    00000001                         37 	.ds 1
    00000002                         38 _prSpd::
    00000002                         39 	.ds 1
    00000003                         40 _boneCounter::
    00000003                         41 	.ds 1
    00000004                         42 _frameCounter::
    00000004                         43 	.ds 1
                                     44 ;--------------------------------------------------------
                                     45 ; absolute external ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area _DABS (ABS)
                                     48 ;--------------------------------------------------------
                                     49 ; global & static initialisations
                                     50 ;--------------------------------------------------------
                                     51 	.area _HOME
                                     52 	.area _GSINIT
                                     53 	.area _GSFINAL
                                     54 	.area _GSINIT
                                     55 ;--------------------------------------------------------
                                     56 ; Home
                                     57 ;--------------------------------------------------------
                                     58 	.area _HOME
                                     59 	.area _HOME
                                     60 ;--------------------------------------------------------
                                     61 ; code
                                     62 ;--------------------------------------------------------
                                     63 	.area _CODE
                                     64 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:81: void initBoneTable(void){
                                     65 ;	---------------------------------
                                     66 ; Function initBoneTable
                                     67 ; ---------------------------------
    00000000                         68 _initBoneTable::
    00000000 3B               [ 8]   69 	dec	sp
                                     70 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:85: for(uint8_t b = 0; b < MAX_BONE; b++){
    00000001 F8 00            [12]   71 	ldhl	sp,	#0
    00000003 36 00            [12]   72 	ld	(hl), #0x00
    00000005                         73 00114$:
    00000005 F8 00            [12]   74 	ldhl	sp,	#0
    00000007 7E               [ 8]   75 	ld	a, (hl)
    00000008 D6 06            [ 8]   76 	sub	a, #0x06
    0000000A 30 7B            [12]   77 	jr	NC, 00116$
                                     78 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:87: uint8_t r = ((uint8_t)rand()) % (uint8_t)4;
    0000000C CDr00r00         [24]   79 	call	_rand
    0000000F 7B               [ 4]   80 	ld	a, e
                                     81 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:88: if(r==0){
    00000010 E6 03            [ 8]   82 	and	a,#0x03
    00000012 20 0C            [12]   83 	jr	NZ, 00110$
                                     84 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:89: prX = 1;
    00000014 21r00r00         [12]   85 	ld	hl, #_prX
    00000017 36 01            [12]   86 	ld	(hl), #0x01
                                     87 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:90: prY = 1;
    00000019 21r01r00         [12]   88 	ld	hl, #_prY
    0000001C 36 01            [12]   89 	ld	(hl), #0x01
    0000001E 18 2E            [12]   90 	jr	00111$
    00000020                         91 00110$:
                                     92 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:91: } else if(r==1){
    00000020 FE 01            [ 8]   93 	cp	a, #0x01
    00000022 20 0C            [12]   94 	jr	NZ, 00107$
                                     95 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:92: prX = 160;
    00000024 21r00r00         [12]   96 	ld	hl, #_prX
    00000027 36 A0            [12]   97 	ld	(hl), #0xa0
                                     98 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:93: prY = 1;
    00000029 21r01r00         [12]   99 	ld	hl, #_prY
    0000002C 36 01            [12]  100 	ld	(hl), #0x01
    0000002E 18 1E            [12]  101 	jr	00111$
    00000030                        102 00107$:
                                    103 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:94: } else if(r==2){
    00000030 FE 02            [ 8]  104 	cp	a, #0x02
    00000032 20 0C            [12]  105 	jr	NZ, 00104$
                                    106 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:95: prX = 160;
    00000034 21r00r00         [12]  107 	ld	hl, #_prX
    00000037 36 A0            [12]  108 	ld	(hl), #0xa0
                                    109 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:96: prY = 144;
    00000039 21r01r00         [12]  110 	ld	hl, #_prY
    0000003C 36 90            [12]  111 	ld	(hl), #0x90
    0000003E 18 0E            [12]  112 	jr	00111$
    00000040                        113 00104$:
                                    114 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:97: } else if(r==3){
    00000040 D6 03            [ 8]  115 	sub	a, #0x03
    00000042 20 0A            [12]  116 	jr	NZ, 00111$
                                    117 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:98: prX = 1;
    00000044 21r00r00         [12]  118 	ld	hl, #_prX
    00000047 36 01            [12]  119 	ld	(hl), #0x01
                                    120 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:99: prY = 144;
    00000049 21r01r00         [12]  121 	ld	hl, #_prY
    0000004C 36 90            [12]  122 	ld	(hl), #0x90
    0000004E                        123 00111$:
                                    124 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:102: bones[b].active = 0;
    0000004E F8 00            [12]  125 	ldhl	sp,	#0
    00000050 4E               [ 8]  126 	ld	c, (hl)
    00000051 06 00            [ 8]  127 	ld	b, #0x00
    00000053 69               [ 4]  128 	ld	l, c
    00000054 60               [ 4]  129 	ld	h, b
    00000055 29               [ 8]  130 	add	hl, hl
    00000056 09               [ 8]  131 	add	hl, bc
    00000057 29               [ 8]  132 	add	hl, hl
    00000058 7D               [ 4]  133 	ld	a, l
    00000059 C6r00            [ 8]  134 	add	a, #<(_bones)
    0000005B 4F               [ 4]  135 	ld	c, a
    0000005C 7C               [ 4]  136 	ld	a, h
    0000005D CEs00            [ 8]  137 	adc	a, #>(_bones)
    0000005F 47               [ 4]  138 	ld	b, a
    00000060 69               [ 4]  139 	ld	l, c
                                    140 ;	spillPairReg hl
                                    141 ;	spillPairReg hl
    00000061 60               [ 4]  142 	ld	h, b
                                    143 ;	spillPairReg hl
                                    144 ;	spillPairReg hl
    00000062 23               [ 8]  145 	inc	hl
    00000063 23               [ 8]  146 	inc	hl
    00000064 23               [ 8]  147 	inc	hl
    00000065 36 00            [12]  148 	ld	(hl), #0x00
                                    149 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:103: bones[b].metasprite = boneMS;
    00000067 21 04 00         [12]  150 	ld	hl, #0x0004
    0000006A 09               [ 8]  151 	add	hl, bc
    0000006B 3Er00            [ 8]  152 	ld	a, #<(_boneMS)
    0000006D 22               [ 8]  153 	ld	(hl+), a
    0000006E 36s00            [12]  154 	ld	(hl), #>(_boneMS)
                                    155 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:104: bones[b].x = prX;
    00000070 FAr00r00         [16]  156 	ld	a, (#_prX)
    00000073 02               [ 8]  157 	ld	(bc), a
                                    158 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:105: bones[b].y = prY;
    00000074 59               [ 4]  159 	ld	e, c
    00000075 50               [ 4]  160 	ld	d, b
    00000076 13               [ 8]  161 	inc	de
    00000077 FAr01r00         [16]  162 	ld	a, (#_prY)
    0000007A 12               [ 8]  163 	ld	(de), a
                                    164 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:106: bones[b].speed = prSpd;
    0000007B 03               [ 8]  165 	inc	bc
    0000007C 03               [ 8]  166 	inc	bc
    0000007D FAr02r00         [16]  167 	ld	a, (#_prSpd)
    00000080 02               [ 8]  168 	ld	(bc), a
                                    169 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:85: for(uint8_t b = 0; b < MAX_BONE; b++){
    00000081 F8 00            [12]  170 	ldhl	sp,	#0
    00000083 34               [12]  171 	inc	(hl)
    00000084 C3r05r00         [16]  172 	jp	00114$
    00000087                        173 00116$:
                                    174 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:108: }
    00000087 33               [ 8]  175 	inc	sp
    00000088 C9               [16]  176 	ret
                                    177 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:110: void throwBone(void){
                                    178 ;	---------------------------------
                                    179 ; Function throwBone
                                    180 ; ---------------------------------
    00000089                        181 _throwBone::
                                    182 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:112: if((boneCounter < MAX_BONE)){
    00000089 FAr03r00         [16]  183 	ld	a, (#_boneCounter)
    0000008C D6 06            [ 8]  184 	sub	a, #0x06
    0000008E 3E 00            [ 8]  185 	ld	a, #0x00
    00000090 17               [ 4]  186 	rla
    00000091 4F               [ 4]  187 	ld	c, a
    00000092 B7               [ 4]  188 	or	a, a
    00000093 28 69            [12]  189 	jr	Z, 00107$
                                    190 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:114: frameCounter++;
    00000095 21r04r00         [12]  191 	ld	hl, #_frameCounter
    00000098 34               [12]  192 	inc	(hl)
                                    193 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:119: printf("frameCounter: %d\n", frameCounter);
    00000099 4E               [ 8]  194 	ld	c, (hl)
    0000009A 06 00            [ 8]  195 	ld	b, #0x00
    0000009C C5               [16]  196 	push	bc
    0000009D 11r07r01         [12]  197 	ld	de, #___str_0
    000000A0 D5               [16]  198 	push	de
    000000A1 CDr00r00         [24]  199 	call	_printf
    000000A4 E8 04            [16]  200 	add	sp, #4
                                    201 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:120: printf("boneCounter: %d\n", boneCounter);
    000000A6 21r03r00         [12]  202 	ld	hl, #_boneCounter
    000000A9 4E               [ 8]  203 	ld	c, (hl)
    000000AA 06 00            [ 8]  204 	ld	b, #0x00
    000000AC C5               [16]  205 	push	bc
    000000AD 11r19r01         [12]  206 	ld	de, #___str_1
    000000B0 D5               [16]  207 	push	de
    000000B1 CDr00r00         [24]  208 	call	_printf
    000000B4 E8 04            [16]  209 	add	sp, #4
                                    210 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:121: printf("boneX: %d\n", bones[boneCounter].x);
    000000B6 21r03r00         [12]  211 	ld	hl, #_boneCounter
    000000B9 4E               [ 8]  212 	ld	c, (hl)
    000000BA 06 00            [ 8]  213 	ld	b, #0x00
    000000BC 69               [ 4]  214 	ld	l, c
    000000BD 60               [ 4]  215 	ld	h, b
    000000BE 29               [ 8]  216 	add	hl, hl
    000000BF 09               [ 8]  217 	add	hl, bc
    000000C0 29               [ 8]  218 	add	hl, hl
    000000C1 01r00r00         [12]  219 	ld	bc,#_bones
    000000C4 09               [ 8]  220 	add	hl,bc
    000000C5 4E               [ 8]  221 	ld	c, (hl)
    000000C6 06 00            [ 8]  222 	ld	b, #0x00
    000000C8 C5               [16]  223 	push	bc
    000000C9 11r2Ar01         [12]  224 	ld	de, #___str_2
    000000CC D5               [16]  225 	push	de
    000000CD CDr00r00         [24]  226 	call	_printf
    000000D0 E8 04            [16]  227 	add	sp, #4
                                    228 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:122: printf("boneY: %d\n", bones[boneCounter].y);
    000000D2 21r03r00         [12]  229 	ld	hl, #_boneCounter
    000000D5 4E               [ 8]  230 	ld	c, (hl)
    000000D6 06 00            [ 8]  231 	ld	b, #0x00
    000000D8 69               [ 4]  232 	ld	l, c
    000000D9 60               [ 4]  233 	ld	h, b
    000000DA 29               [ 8]  234 	add	hl, hl
    000000DB 09               [ 8]  235 	add	hl, bc
    000000DC 29               [ 8]  236 	add	hl, hl
    000000DD 01r00r00         [12]  237 	ld	bc,#_bones
    000000E0 09               [ 8]  238 	add	hl,bc
    000000E1 23               [ 8]  239 	inc	hl
    000000E2 4E               [ 8]  240 	ld	c, (hl)
    000000E3 06 00            [ 8]  241 	ld	b, #0x00
    000000E5 C5               [16]  242 	push	bc
    000000E6 11r35r01         [12]  243 	ld	de, #___str_3
    000000E9 D5               [16]  244 	push	de
    000000EA CDr00r00         [24]  245 	call	_printf
    000000ED E8 04            [16]  246 	add	sp, #4
                                    247 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:154: if(frameCounter < FRAME_PER_SPAWN){
    000000EF 21r04r00         [12]  248 	ld	hl, #_frameCounter
    000000F2 7E               [ 8]  249 	ld	a, (hl)
    000000F3 D6 06            [ 8]  250 	sub	a, #0x06
    000000F5 38 02            [12]  251 	jr	C, 00103$
                                    252 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:156: frameCounter = 1;
    000000F7 36 01            [12]  253 	ld	(hl), #0x01
    000000F9                        254 00103$:
                                    255 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:159: boneCounter++;
    000000F9 21r03r00         [12]  256 	ld	hl, #_boneCounter
    000000FC 34               [12]  257 	inc	(hl)
    000000FD C9               [16]  258 	ret
    000000FE                        259 00107$:
                                    260 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:161: } else if(boneCounter >= MAX_BONE){
    000000FE CB 41            [ 8]  261 	bit	0, c
    00000100 C0               [20]  262 	ret	NZ
                                    263 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:162: boneCounter = 0;
    00000101 21r03r00         [12]  264 	ld	hl, #_boneCounter
    00000104 36 00            [12]  265 	ld	(hl), #0x00
                                    266 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:164: }
    00000106 C9               [16]  267 	ret
    00000107                        268 ___str_0:
    00000107 66 72 61 6D 65 43 6F   269 	.ascii "frameCounter: %d"
             75 6E 74 65 72 3A 20
             25 64
    00000117 0A                     270 	.db 0x0a
    00000118 00                     271 	.db 0x00
    00000119                        272 ___str_1:
    00000119 62 6F 6E 65 43 6F 75   273 	.ascii "boneCounter: %d"
             6E 74 65 72 3A 20 25
             64
    00000128 0A                     274 	.db 0x0a
    00000129 00                     275 	.db 0x00
    0000012A                        276 ___str_2:
    0000012A 62 6F 6E 65 58 3A 20   277 	.ascii "boneX: %d"
             25 64
    00000133 0A                     278 	.db 0x0a
    00000134 00                     279 	.db 0x00
    00000135                        280 ___str_3:
    00000135 62 6F 6E 65 59 3A 20   281 	.ascii "boneY: %d"
             25 64
    0000013E 0A                     282 	.db 0x0a
    0000013F 00                     283 	.db 0x00
                                    284 	.area _CODE
                                    285 	.area _INITIALIZER
    00000000                        286 __xinit__prX:
    00000000 01                     287 	.db #0x01	; 1
    00000001                        288 __xinit__prY:
    00000001 01                     289 	.db #0x01	; 1
    00000002                        290 __xinit__prSpd:
    00000002 00                     291 	.db #0x00	; 0
    00000003                        292 __xinit__boneCounter:
    00000003 00                     293 	.db #0x00	; 0
    00000004                        294 __xinit__frameCounter:
    00000004 05                     295 	.db #0x05	; 5
                                    296 	.area _CABS (ABS)
