                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module projectiles
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _initRandXY
                                     12 	.globl _projSPC
                                     13 	.globl _rand
                                     14 	.globl _deltas
                                     15 	.globl _bones
                                     16 	.globl _initBoneTable
                                     17 	.globl _throwBone
                                     18 	.globl _updateBone
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _DATA
    00000000                         26 _bones::
    00000000                         27 	.ds 54
    00000036                         28 _deltas::
    00000036                         29 	.ds 2
    00000038                         30 _updateBone_newX_10000_224:
    00000038                         31 	.ds 2
    0000003A                         32 _updateBone_newY_10000_224:
    0000003A                         33 	.ds 2
                                     34 ;--------------------------------------------------------
                                     35 ; ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area _INITIALIZED
    00000000                         38 _boneCounter:
    00000000                         39 	.ds 1
    00000001                         40 _activeBones:
    00000001                         41 	.ds 1
    00000002                         42 _frameCounter:
    00000002                         43 	.ds 1
                                     44 ;--------------------------------------------------------
                                     45 ; absolute external ram data
                                     46 ;--------------------------------------------------------
                                     47 	.area _DABS (ABS)
                                     48 ;--------------------------------------------------------
                                     49 ; global & static initialisations
                                     50 ;--------------------------------------------------------
                                     51 	.area _HOME
                                     52 	.area _GSINIT
                                     53 	.area _GSFINAL
                                     54 	.area _GSINIT
                                     55 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:125: static int16_t newX = 0;
    00000000 AF               [ 4]   56 	xor	a, a
    00000001 21r38r00         [12]   57 	ld	hl, #_updateBone_newX_10000_224
    00000004 22               [ 8]   58 	ld	(hl+), a
    00000005 77               [ 8]   59 	ld	(hl), a
                                     60 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:126: static int16_t newY = 0;
    00000006 AF               [ 4]   61 	xor	a, a
    00000007 21r3Ar00         [12]   62 	ld	hl, #_updateBone_newY_10000_224
    0000000A 22               [ 8]   63 	ld	(hl+), a
    0000000B 77               [ 8]   64 	ld	(hl), a
                                     65 ;--------------------------------------------------------
                                     66 ; Home
                                     67 ;--------------------------------------------------------
                                     68 	.area _HOME
                                     69 	.area _HOME
                                     70 ;--------------------------------------------------------
                                     71 ; code
                                     72 ;--------------------------------------------------------
                                     73 	.area _CODE
                                     74 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:67: void initRandXY(int16_t* prX, int16_t* prY){
                                     75 ;	---------------------------------
                                     76 ; Function initRandXY
                                     77 ; ---------------------------------
    00000000                         78 _initRandXY::
                                     79 ;	spillPairReg hl
                                     80 ;	spillPairReg hl
                                     81 ;	spillPairReg hl
                                     82 ;	spillPairReg hl
                                     83 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:69: uint8_t r = ((uint8_t)rand()) % (uint8_t)4;
    00000000 D5               [16]   84 	push	de
    00000001 C5               [16]   85 	push	bc
    00000002 CDr00r00         [24]   86 	call	_rand
    00000005 7B               [ 4]   87 	ld	a, e
    00000006 C1               [12]   88 	pop	bc
    00000007 E1               [12]   89 	pop	hl
                                     90 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:70: if(r==0){
    00000008 E6 03            [ 8]   91 	and	a,#0x03
    0000000A 20 0C            [12]   92 	jr	NZ, 00110$
                                     93 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:71: *prX = 20;
    0000000C 3E 14            [ 8]   94 	ld	a, #0x14
    0000000E 22               [ 8]   95 	ld	(hl+), a
    0000000F 36 00            [12]   96 	ld	(hl), #0x00
                                     97 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:72: *prY = 20;
    00000011 3E 14            [ 8]   98 	ld	a, #0x14
    00000013 02               [ 8]   99 	ld	(bc), a
    00000014 03               [ 8]  100 	inc	bc
    00000015 AF               [ 4]  101 	xor	a, a
    00000016 02               [ 8]  102 	ld	(bc), a
    00000017 C9               [16]  103 	ret
    00000018                        104 00110$:
                                    105 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:73: } else if(r==1){
    00000018 FE 01            [ 8]  106 	cp	a, #0x01
    0000001A 20 0C            [12]  107 	jr	NZ, 00107$
                                    108 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:74: *prX = 130;
    0000001C 3E 82            [ 8]  109 	ld	a, #0x82
    0000001E 22               [ 8]  110 	ld	(hl+), a
    0000001F 36 00            [12]  111 	ld	(hl), #0x00
                                    112 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:75: *prY = 20;
    00000021 3E 14            [ 8]  113 	ld	a, #0x14
    00000023 02               [ 8]  114 	ld	(bc), a
    00000024 03               [ 8]  115 	inc	bc
    00000025 AF               [ 4]  116 	xor	a, a
    00000026 02               [ 8]  117 	ld	(bc), a
    00000027 C9               [16]  118 	ret
    00000028                        119 00107$:
                                    120 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:76: } else if(r==2){
    00000028 FE 02            [ 8]  121 	cp	a, #0x02
    0000002A 20 0C            [12]  122 	jr	NZ, 00104$
                                    123 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:77: *prX = 130;
    0000002C 3E 82            [ 8]  124 	ld	a, #0x82
    0000002E 22               [ 8]  125 	ld	(hl+), a
    0000002F 36 00            [12]  126 	ld	(hl), #0x00
                                    127 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:78: *prY = 125;
    00000031 3E 7D            [ 8]  128 	ld	a, #0x7d
    00000033 02               [ 8]  129 	ld	(bc), a
    00000034 03               [ 8]  130 	inc	bc
    00000035 AF               [ 4]  131 	xor	a, a
    00000036 02               [ 8]  132 	ld	(bc), a
    00000037 C9               [16]  133 	ret
    00000038                        134 00104$:
                                    135 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:79: } else if(r==3){
    00000038 D6 03            [ 8]  136 	sub	a, #0x03
    0000003A C0               [20]  137 	ret	NZ
                                    138 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:80: *prX = 20;
    0000003B 3E 14            [ 8]  139 	ld	a, #0x14
    0000003D 22               [ 8]  140 	ld	(hl+), a
    0000003E 36 00            [12]  141 	ld	(hl), #0x00
                                    142 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:81: *prY = 125;
    00000040 3E 7D            [ 8]  143 	ld	a, #0x7d
    00000042 02               [ 8]  144 	ld	(bc), a
    00000043 03               [ 8]  145 	inc	bc
    00000044 AF               [ 4]  146 	xor	a, a
    00000045 02               [ 8]  147 	ld	(bc), a
                                    148 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:83: }
    00000046 C9               [16]  149 	ret
                                    150 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:85: void initBoneTable(void){
                                    151 ;	---------------------------------
                                    152 ; Function initBoneTable
                                    153 ; ---------------------------------
    00000047                        154 _initBoneTable::
    00000047 E8 F7            [16]  155 	add	sp, #-9
                                    156 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:90: uint8_t oambt = 4;
    00000049 F8 00            [12]  157 	ldhl	sp,	#0
    0000004B 36 04            [12]  158 	ld	(hl), #0x04
                                    159 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:92: for(uint8_t b = 0; b < MAX_BONE; b++){
    0000004D F8 08            [12]  160 	ldhl	sp,	#8
    0000004F 36 00            [12]  161 	ld	(hl), #0x00
    00000051                        162 00104$:
    00000051 F8 08            [12]  163 	ldhl	sp,	#8
    00000053 7E               [ 8]  164 	ld	a, (hl)
    00000054 D6 06            [ 8]  165 	sub	a, #0x06
    00000056 D2r15r01         [16]  166 	jp	NC, 00106$
                                    167 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:94: bones[b].x = 0;
    00000059 4E               [ 8]  168 	ld	c, (hl)
    0000005A 06 00            [ 8]  169 	ld	b, #0x00
    0000005C 69               [ 4]  170 	ld	l, c
    0000005D 60               [ 4]  171 	ld	h, b
    0000005E 29               [ 8]  172 	add	hl, hl
    0000005F 29               [ 8]  173 	add	hl, hl
    00000060 29               [ 8]  174 	add	hl, hl
    00000061 09               [ 8]  175 	add	hl, bc
    00000062 01r00r00         [12]  176 	ld	bc,#_bones
    00000065 09               [ 8]  177 	add	hl,bc
    00000066 E5               [16]  178 	push	hl
    00000067 7D               [ 4]  179 	ld	a, l
    00000068 F8 03            [12]  180 	ldhl	sp,	#3
    0000006A 77               [ 8]  181 	ld	(hl), a
    0000006B E1               [12]  182 	pop	hl
    0000006C 7C               [ 4]  183 	ld	a, h
    0000006D F8 02            [12]  184 	ldhl	sp,	#2
    0000006F 32               [ 8]  185 	ld	(hl-), a
    00000070 2A               [ 8]  186 	ld	a,	(hl+)
    00000071 66               [ 8]  187 	ld	h, (hl)
    00000072 6F               [ 4]  188 	ld	l, a
    00000073 AF               [ 4]  189 	xor	a, a
    00000074 22               [ 8]  190 	ld	(hl+), a
    00000075 77               [ 8]  191 	ld	(hl), a
                                    192 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:95: bones[b].y = 0;
    00000076 F8 01            [12]  193 	ldhl	sp,#1
    00000078 2A               [ 8]  194 	ld	a, (hl+)
    00000079 5F               [ 4]  195 	ld	e, a
    0000007A 56               [ 8]  196 	ld	d, (hl)
    0000007B 21 02 00         [12]  197 	ld	hl, #0x0002
    0000007E 19               [ 8]  198 	add	hl, de
    0000007F E5               [16]  199 	push	hl
    00000080 7D               [ 4]  200 	ld	a, l
    00000081 F8 05            [12]  201 	ldhl	sp,	#5
    00000083 77               [ 8]  202 	ld	(hl), a
    00000084 E1               [12]  203 	pop	hl
    00000085 7C               [ 4]  204 	ld	a, h
    00000086 F8 04            [12]  205 	ldhl	sp,	#4
    00000088 32               [ 8]  206 	ld	(hl-), a
    00000089 2A               [ 8]  207 	ld	a,	(hl+)
    0000008A 66               [ 8]  208 	ld	h, (hl)
    0000008B 6F               [ 4]  209 	ld	l, a
    0000008C AF               [ 4]  210 	xor	a, a
    0000008D 22               [ 8]  211 	ld	(hl+), a
    0000008E 77               [ 8]  212 	ld	(hl), a
                                    213 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:96: bones[b].prActive = 0;
    0000008F F8 01            [12]  214 	ldhl	sp,#1
    00000091 2A               [ 8]  215 	ld	a, (hl+)
    00000092 5F               [ 4]  216 	ld	e, a
    00000093 56               [ 8]  217 	ld	d, (hl)
    00000094 21 06 00         [12]  218 	ld	hl, #0x0006
    00000097 19               [ 8]  219 	add	hl, de
    00000098 4D               [ 4]  220 	ld	c, l
    00000099 44               [ 4]  221 	ld	b, h
    0000009A AF               [ 4]  222 	xor	a, a
    0000009B 02               [ 8]  223 	ld	(bc), a
                                    224 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:97: bones[b].metasprite = boneMS;
    0000009C F8 01            [12]  225 	ldhl	sp,#1
    0000009E 2A               [ 8]  226 	ld	a, (hl+)
    0000009F 5F               [ 4]  227 	ld	e, a
    000000A0 56               [ 8]  228 	ld	d, (hl)
    000000A1 21 07 00         [12]  229 	ld	hl, #0x0007
    000000A4 19               [ 8]  230 	add	hl, de
    000000A5 E5               [16]  231 	push	hl
    000000A6 7D               [ 4]  232 	ld	a, l
    000000A7 F8 07            [12]  233 	ldhl	sp,	#7
    000000A9 77               [ 8]  234 	ld	(hl), a
    000000AA E1               [12]  235 	pop	hl
    000000AB 7C               [ 4]  236 	ld	a, h
    000000AC F8 06            [12]  237 	ldhl	sp,	#6
    000000AE 32               [ 8]  238 	ld	(hl-), a
    000000AF 2A               [ 8]  239 	ld	a,	(hl+)
    000000B0 66               [ 8]  240 	ld	h, (hl)
    000000B1 6F               [ 4]  241 	ld	l, a
    000000B2 3Er00            [ 8]  242 	ld	a, #<(_boneMS)
    000000B4 22               [ 8]  243 	ld	(hl+), a
    000000B5 36s00            [12]  244 	ld	(hl), #>(_boneMS)
                                    245 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:98: bones[b].speed = 0;
    000000B7 F8 01            [12]  246 	ldhl	sp,#1
    000000B9 2A               [ 8]  247 	ld	a, (hl+)
    000000BA 5F               [ 4]  248 	ld	e, a
    000000BB 56               [ 8]  249 	ld	d, (hl)
    000000BC 21 04 00         [12]  250 	ld	hl, #0x0004
    000000BF 19               [ 8]  251 	add	hl, de
    000000C0 4D               [ 4]  252 	ld	c, l
    000000C1 44               [ 4]  253 	ld	b, h
    000000C2 AF               [ 4]  254 	xor	a, a
    000000C3 02               [ 8]  255 	ld	(bc), a
    000000C4 03               [ 8]  256 	inc	bc
    000000C5 02               [ 8]  257 	ld	(bc), a
                                    258 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:99: initRandXY(&bones[b].x, &bones[b].y);
    000000C6 F8 03            [12]  259 	ldhl	sp,	#3
    000000C8 2A               [ 8]  260 	ld	a, (hl+)
    000000C9 4F               [ 4]  261 	ld	c, a
    000000CA 46               [ 8]  262 	ld	b, (hl)
    000000CB F8 01            [12]  263 	ldhl	sp,	#1
    000000CD 2A               [ 8]  264 	ld	a, (hl+)
    000000CE 5F               [ 4]  265 	ld	e, a
    000000CF 56               [ 8]  266 	ld	d, (hl)
    000000D0 CDr00r00         [24]  267 	call	_initRandXY
                                    268 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:100: move_metasprite_ex(bones[b].metasprite,4,0,oambt,bones[b].x,bones[b].y);
    000000D3 F8 03            [12]  269 	ldhl	sp,#3
    000000D5 2A               [ 8]  270 	ld	a, (hl+)
    000000D6 5F               [ 4]  271 	ld	e, a
    000000D7 56               [ 8]  272 	ld	d, (hl)
    000000D8 1A               [ 8]  273 	ld	a, (de)
    000000D9 F8 07            [12]  274 	ldhl	sp,	#7
    000000DB 77               [ 8]  275 	ld	(hl), a
    000000DC F8 01            [12]  276 	ldhl	sp,#1
    000000DE 2A               [ 8]  277 	ld	a, (hl+)
    000000DF 5F               [ 4]  278 	ld	e, a
    000000E0 56               [ 8]  279 	ld	d, (hl)
    000000E1 1A               [ 8]  280 	ld	a, (de)
    000000E2 4F               [ 4]  281 	ld	c, a
    000000E3 F8 05            [12]  282 	ldhl	sp,#5
    000000E5 2A               [ 8]  283 	ld	a, (hl+)
    000000E6 5F               [ 4]  284 	ld	e, a
    000000E7 56               [ 8]  285 	ld	d, (hl)
    000000E8 1A               [ 8]  286 	ld	a, (de)
    000000E9 6F               [ 4]  287 	ld	l, a
                                    288 ;	spillPairReg hl
                                    289 ;	spillPairReg hl
    000000EA 13               [ 8]  290 	inc	de
    000000EB 1A               [ 8]  291 	ld	a, (de)
    000000EC 67               [ 4]  292 	ld	h, a
                                    293 ;	spillPairReg hl
                                    294 ;	spillPairReg hl
                                    295 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:160: __current_metasprite = metasprite;
    000000ED 5D               [ 4]  296 	ld	e, l
    000000EE 54               [ 4]  297 	ld	d, h
    000000EF 21r00r00         [12]  298 	ld	hl, #___current_metasprite
    000000F2 7B               [ 4]  299 	ld	a, e
    000000F3 22               [ 8]  300 	ld	(hl+), a
    000000F4 72               [ 8]  301 	ld	(hl), d
                                    302 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:161: __current_base_tile = base_tile;
    000000F5 21r00r00         [12]  303 	ld	hl, #___current_base_tile
    000000F8 36 04            [12]  304 	ld	(hl), #0x04
                                    305 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:162: __current_base_prop = base_prop;
    000000FA 21r00r00         [12]  306 	ld	hl, #___current_base_prop
    000000FD 36 00            [12]  307 	ld	(hl), #0x00
                                    308 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:163: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
    000000FF F8 07            [12]  309 	ldhl	sp,	#7
    00000101 56               [ 8]  310 	ld	d, (hl)
    00000102 59               [ 4]  311 	ld	e, c
    00000103 F8 00            [12]  312 	ldhl	sp,	#0
    00000105 7E               [ 8]  313 	ld	a, (hl)
    00000106 CDr00r00         [24]  314 	call	___move_metasprite
                                    315 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:101: oambt += 2;
    00000109 F8 00            [12]  316 	ldhl	sp,	#0
    0000010B 7E               [ 8]  317 	ld	a, (hl)
    0000010C C6 02            [ 8]  318 	add	a, #0x02
    0000010E 77               [ 8]  319 	ld	(hl), a
                                    320 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:92: for(uint8_t b = 0; b < MAX_BONE; b++){
    0000010F F8 08            [12]  321 	ldhl	sp,	#8
    00000111 34               [12]  322 	inc	(hl)
    00000112 C3r51r00         [16]  323 	jp	00104$
    00000115                        324 00106$:
                                    325 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:103: }
    00000115 E8 09            [16]  326 	add	sp, #9
    00000117 C9               [16]  327 	ret
                                    328 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:105: void throwBone(void){
                                    329 ;	---------------------------------
                                    330 ; Function throwBone
                                    331 ; ---------------------------------
    00000118                        332 _throwBone::
    00000118 E8 FC            [16]  333 	add	sp, #-4
                                    334 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:107: if(activeBones < MAX_BONE){
    0000011A FAr01r00         [16]  335 	ld	a, (#_activeBones)
    0000011D D6 06            [ 8]  336 	sub	a, #0x06
    0000011F 30 4E            [12]  337 	jr	NC, 00104$
                                    338 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:111: if(frameCounter < FRAME_PER_SPAWN){
    00000121 FAr02r00         [16]  339 	ld	a, (#_frameCounter)
    00000124 D6 06            [ 8]  340 	sub	a, #0x06
    00000126 30 4C            [12]  341 	jr	NC, 00106$
                                    342 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:112: int16_t* deltas = projSPC(bones[boneCounter].x, ghostyX, bones[boneCounter].y, ghostyY);
    00000128 21r00r00         [12]  343 	ld	hl, #_boneCounter
    0000012B 4E               [ 8]  344 	ld	c, (hl)
    0000012C 06 00            [ 8]  345 	ld	b, #0x00
    0000012E 69               [ 4]  346 	ld	l, c
    0000012F 60               [ 4]  347 	ld	h, b
    00000130 29               [ 8]  348 	add	hl, hl
    00000131 29               [ 8]  349 	add	hl, hl
    00000132 29               [ 8]  350 	add	hl, hl
    00000133 09               [ 8]  351 	add	hl, bc
    00000134 01r00r00         [12]  352 	ld	bc,#_bones
    00000137 09               [ 8]  353 	add	hl,bc
                                    354 ;	spillPairReg hl
                                    355 ;	spillPairReg hl
    00000138 4D               [ 4]  356 	ld	c,l
    00000139 44               [ 4]  357 	ld	b,h
                                    358 ;	spillPairReg hl
                                    359 ;	spillPairReg hl
    0000013A 23               [ 8]  360 	inc	hl
    0000013B 23               [ 8]  361 	inc	hl
    0000013C 5D               [ 4]  362 	ld	e, l
    0000013D 54               [ 4]  363 	ld	d, h
    0000013E 1A               [ 8]  364 	ld	a, (de)
    0000013F F8 00            [12]  365 	ldhl	sp,	#0
    00000141 22               [ 8]  366 	ld	(hl+), a
    00000142 13               [ 8]  367 	inc	de
    00000143 1A               [ 8]  368 	ld	a, (de)
    00000144 77               [ 8]  369 	ld	(hl), a
    00000145 59               [ 4]  370 	ld	e, c
    00000146 50               [ 4]  371 	ld	d, b
    00000147 1A               [ 8]  372 	ld	a, (de)
    00000148 F8 02            [12]  373 	ldhl	sp,	#2
    0000014A 22               [ 8]  374 	ld	(hl+), a
    0000014B 13               [ 8]  375 	inc	de
    0000014C 1A               [ 8]  376 	ld	a, (de)
    0000014D 77               [ 8]  377 	ld	(hl), a
    0000014E 21r00r00         [12]  378 	ld	hl, #_ghostyY
    00000151 2A               [ 8]  379 	ld	a, (hl+)
    00000152 5F               [ 4]  380 	ld	e, a
    00000153 56               [ 8]  381 	ld	d, (hl)
    00000154 D5               [16]  382 	push	de
    00000155 F8 02            [12]  383 	ldhl	sp,	#2
    00000157 2A               [ 8]  384 	ld	a, (hl+)
    00000158 5F               [ 4]  385 	ld	e, a
    00000159 56               [ 8]  386 	ld	d, (hl)
    0000015A D5               [16]  387 	push	de
    0000015B 21r00r00         [12]  388 	ld	hl, #_ghostyX
    0000015E 2A               [ 8]  389 	ld	a, (hl+)
    0000015F 4F               [ 4]  390 	ld	c, a
    00000160 46               [ 8]  391 	ld	b, (hl)
    00000161 F8 06            [12]  392 	ldhl	sp,	#6
    00000163 2A               [ 8]  393 	ld	a, (hl+)
    00000164 5F               [ 4]  394 	ld	e, a
    00000165 56               [ 8]  395 	ld	d, (hl)
    00000166 CDr00r00         [24]  396 	call	_projSPC
                                    397 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:113: activeBones++;
    00000169 21r01r00         [12]  398 	ld	hl, #_activeBones
    0000016C 34               [12]  399 	inc	(hl)
    0000016D 18 05            [12]  400 	jr	00106$
    0000016F                        401 00104$:
                                    402 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:117: activeBones = 0;
    0000016F 21r01r00         [12]  403 	ld	hl, #_activeBones
    00000172 36 00            [12]  404 	ld	(hl), #0x00
    00000174                        405 00106$:
                                    406 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:119: }
    00000174 E8 04            [16]  407 	add	sp, #4
    00000176 C9               [16]  408 	ret
                                    409 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:121: void updateBone(void){
                                    410 ;	---------------------------------
                                    411 ; Function updateBone
                                    412 ; ---------------------------------
    00000177                        413 _updateBone::
    00000177 3B               [ 8]  414 	dec	sp
    00000178 3B               [ 8]  415 	dec	sp
                                    416 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:130: newX += deltas[1];
    00000179 21r36r00         [12]  417 	ld	hl, #_deltas
    0000017C 2A               [ 8]  418 	ld	a, (hl+)
    0000017D 4F               [ 4]  419 	ld	c, a
    0000017E 46               [ 8]  420 	ld	b, (hl)
    0000017F 69               [ 4]  421 	ld	l, c
    00000180 60               [ 4]  422 	ld	h, b
    00000181 23               [ 8]  423 	inc	hl
    00000182 23               [ 8]  424 	inc	hl
    00000183 2A               [ 8]  425 	ld	a, (hl+)
    00000184 4F               [ 4]  426 	ld	c, a
    00000185 46               [ 8]  427 	ld	b, (hl)
    00000186 21r38r00         [12]  428 	ld	hl, #_updateBone_newX_10000_224
    00000189 7E               [ 8]  429 	ld	a, (hl)
    0000018A 81               [ 4]  430 	add	a, c
    0000018B 22               [ 8]  431 	ld	(hl+), a
    0000018C 7E               [ 8]  432 	ld	a, (hl)
    0000018D 88               [ 4]  433 	adc	a, b
    0000018E 77               [ 8]  434 	ld	(hl), a
                                    435 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:131: newY += deltas[0];
    0000018F 21r36r00         [12]  436 	ld	hl, #_deltas
    00000192 6E               [ 8]  437 	ld	l, (hl)
                                    438 ;	spillPairReg hl
                                    439 ;	spillPairReg hl
    00000193 FAr37r00         [16]  440 	ld	a, (_deltas + 1)
    00000196 67               [ 4]  441 	ld	h, a
                                    442 ;	spillPairReg hl
                                    443 ;	spillPairReg hl
    00000197 2A               [ 8]  444 	ld	a, (hl+)
    00000198 4F               [ 4]  445 	ld	c, a
    00000199 46               [ 8]  446 	ld	b, (hl)
    0000019A 21r3Ar00         [12]  447 	ld	hl, #_updateBone_newY_10000_224
    0000019D 7E               [ 8]  448 	ld	a, (hl)
    0000019E 81               [ 4]  449 	add	a, c
    0000019F 22               [ 8]  450 	ld	(hl+), a
    000001A0 7E               [ 8]  451 	ld	a, (hl)
    000001A1 88               [ 4]  452 	adc	a, b
                                    453 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:132: move_metasprite_ex(bones[boneCounter].metasprite,4,0,4,newX,newY);
    000001A2 32               [ 8]  454 	ld	(hl-), a
    000001A3 7E               [ 8]  455 	ld	a, (hl)
    000001A4 F8 00            [12]  456 	ldhl	sp,	#0
    000001A6 77               [ 8]  457 	ld	(hl), a
    000001A7 FAr38r00         [16]  458 	ld	a, (#_updateBone_newX_10000_224)
    000001AA F8 01            [12]  459 	ldhl	sp,	#1
    000001AC 77               [ 8]  460 	ld	(hl), a
    000001AD 21r00r00         [12]  461 	ld	hl, #_boneCounter
    000001B0 4E               [ 8]  462 	ld	c, (hl)
    000001B1 06 00            [ 8]  463 	ld	b, #0x00
    000001B3 69               [ 4]  464 	ld	l, c
    000001B4 60               [ 4]  465 	ld	h, b
    000001B5 29               [ 8]  466 	add	hl, hl
    000001B6 29               [ 8]  467 	add	hl, hl
    000001B7 29               [ 8]  468 	add	hl, hl
    000001B8 09               [ 8]  469 	add	hl, bc
    000001B9 01r00r00         [12]  470 	ld	bc,#_bones
    000001BC 09               [ 8]  471 	add	hl,bc
    000001BD 01 07 00         [12]  472 	ld	bc, #0x0007
    000001C0 09               [ 8]  473 	add	hl, bc
    000001C1 2A               [ 8]  474 	ld	a, (hl+)
    000001C2 4F               [ 4]  475 	ld	c, a
    000001C3 46               [ 8]  476 	ld	b, (hl)
                                    477 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:160: __current_metasprite = metasprite;
    000001C4 21r00r00         [12]  478 	ld	hl, #___current_metasprite
    000001C7 79               [ 4]  479 	ld	a, c
    000001C8 22               [ 8]  480 	ld	(hl+), a
    000001C9 70               [ 8]  481 	ld	(hl), b
                                    482 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:161: __current_base_tile = base_tile;
    000001CA 21r00r00         [12]  483 	ld	hl, #___current_base_tile
    000001CD 36 04            [12]  484 	ld	(hl), #0x04
                                    485 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:162: __current_base_prop = base_prop;
    000001CF 21r00r00         [12]  486 	ld	hl, #___current_base_prop
    000001D2 36 00            [12]  487 	ld	(hl), #0x00
                                    488 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:163: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
    000001D4 F8 00            [12]  489 	ldhl	sp,	#0
    000001D6 2A               [ 8]  490 	ld	a, (hl+)
    000001D7 47               [ 4]  491 	ld	b, a
    000001D8 5E               [ 8]  492 	ld	e, (hl)
    000001D9 50               [ 4]  493 	ld	d, b
    000001DA 3E 04            [ 8]  494 	ld	a, #0x04
    000001DC CDr00r00         [24]  495 	call	___move_metasprite
                                    496 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:134: if(boneCounter < MAX_BONE){
    000001DF 21r00r00         [12]  497 	ld	hl, #_boneCounter
    000001E2 7E               [ 8]  498 	ld	a, (hl)
    000001E3 D6 06            [ 8]  499 	sub	a, #0x06
    000001E5 30 04            [12]  500 	jr	NC, 00102$
                                    501 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:135: boneCounter = 0;
    000001E7 36 00            [12]  502 	ld	(hl), #0x00
    000001E9 18 04            [12]  503 	jr	00105$
    000001EB                        504 00102$:
                                    505 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:137: boneCounter++;
    000001EB 21r00r00         [12]  506 	ld	hl, #_boneCounter
    000001EE 34               [12]  507 	inc	(hl)
    000001EF                        508 00105$:
                                    509 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\projectiles.c:139: }
    000001EF 33               [ 8]  510 	inc	sp
    000001F0 33               [ 8]  511 	inc	sp
    000001F1 C9               [16]  512 	ret
                                    513 	.area _CODE
                                    514 	.area _INITIALIZER
    00000000                        515 __xinit__boneCounter:
    00000000 00                     516 	.db #0x00	; 0
    00000001                        517 __xinit__activeBones:
    00000001 00                     518 	.db #0x00	; 0
    00000002                        519 __xinit__frameCounter:
    00000002 00                     520 	.db #0x00	; 0
                                    521 	.area _CABS (ABS)
