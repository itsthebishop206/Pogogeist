                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module joypadMgmt
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _joypad
                                     12 	.globl _joypadMgr
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area _DATA
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area _INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; absolute external ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DABS (ABS)
                                     28 ;--------------------------------------------------------
                                     29 ; global & static initialisations
                                     30 ;--------------------------------------------------------
                                     31 	.area _HOME
                                     32 	.area _GSINIT
                                     33 	.area _GSFINAL
                                     34 	.area _GSINIT
                                     35 ;--------------------------------------------------------
                                     36 ; Home
                                     37 ;--------------------------------------------------------
                                     38 	.area _HOME
                                     39 	.area _HOME
                                     40 ;--------------------------------------------------------
                                     41 ; code
                                     42 ;--------------------------------------------------------
                                     43 	.area _CODE
                                     44 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:10: void joypadMgr(void){
                                     45 ;	---------------------------------
                                     46 ; Function joypadMgr
                                     47 ; ---------------------------------
    00000000                         48 _joypadMgr::
                                     49 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:13: joypadCurrent = joypad();
    00000000 CDr00r00         [24]   50 	call	_joypad
    00000003 4F               [ 4]   51 	ld	c, a
                                     52 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:14: ghostySpeedX = 0;
    00000004 AF               [ 4]   53 	xor	a, a
    00000005 21r00r00         [12]   54 	ld	hl, #_ghostySpeedX
    00000008 22               [ 8]   55 	ld	(hl+), a
    00000009 77               [ 8]   56 	ld	(hl), a
                                     57 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:32: if(joypadCurrent & J_LEFT){
    0000000A CB 49            [ 8]   58 	bit	1, c
    0000000C 28 12            [12]   59 	jr	Z, 00104$
                                     60 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:34: ghostySpeedX = -1 << PIXEL_SHIFT;
    0000000E 21r00r00         [12]   61 	ld	hl, #_ghostySpeedX
    00000011 AF               [ 4]   62 	xor	a, a
    00000012 22               [ 8]   63 	ld	(hl+), a
    00000013 36 FF            [12]   64 	ld	(hl), #0xff
                                     65 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:35: if(pcFacing==1){
    00000015 FAr00r00         [16]   66 	ld	a, (#_pcFacing)
    00000018 3D               [ 4]   67 	dec	a
    00000019 20 05            [12]   68 	jr	NZ, 00104$
                                     69 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:36: pcFacing = 0;
    0000001B 21r00r00         [12]   70 	ld	hl, #_pcFacing
    0000001E 36 00            [12]   71 	ld	(hl), #0x00
    00000020                         72 00104$:
                                     73 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:40: if(joypadCurrent & J_RIGHT){
    00000020 CB 41            [ 8]   74 	bit	0, c
    00000022 28 10            [12]   75 	jr	Z, 00108$
                                     76 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:42: ghostySpeedX = 1 << PIXEL_SHIFT;
    00000024 21r00r00         [12]   77 	ld	hl, #_ghostySpeedX
    00000027 AF               [ 4]   78 	xor	a, a
    00000028 22               [ 8]   79 	ld	(hl+), a
    00000029 36 01            [12]   80 	ld	(hl), #0x01
                                     81 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:43: if(pcFacing==0){
    0000002B 21r00r00         [12]   82 	ld	hl, #_pcFacing
    0000002E 7E               [ 8]   83 	ld	a, (hl)
    0000002F B7               [ 4]   84 	or	a, a
    00000030 20 02            [12]   85 	jr	NZ, 00108$
                                     86 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:44: pcFacing = 1;
    00000032 36 01            [12]   87 	ld	(hl), #0x01
    00000034                         88 00108$:
                                     89 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:48: fractionX += ghostySpeedX;
    00000034 FAr00r00         [16]   90 	ld	a, (#_fractionX)
    00000037 21r00r00         [12]   91 	ld	hl, #_ghostySpeedX
    0000003A 86               [ 8]   92 	add	a, (hl)
    0000003B 21r00r00         [12]   93 	ld	hl, #_fractionX
    0000003E 22               [ 8]   94 	ld	(hl+), a
    0000003F 7E               [ 8]   95 	ld	a, (hl)
    00000040 21r01r00         [12]   96 	ld	hl, #_ghostySpeedX + 1
    00000043 8E               [ 8]   97 	adc	a, (hl)
    00000044 EAr01r00         [16]   98 	ld	(#_fractionX + 1),a
                                     99 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:50: while(fractionX >= (1<<PIXEL_SHIFT)){
    00000047                        100 00109$:
    00000047 21r00r00         [12]  101 	ld	hl, #_fractionX
    0000004A 2A               [ 8]  102 	ld	a, (hl+)
    0000004B 4F               [ 4]  103 	ld	c, a
    0000004C 46               [ 8]  104 	ld	b, (hl)
    0000004D 78               [ 4]  105 	ld	a, b
    0000004E EE 80            [ 8]  106 	xor	a, #0x80
    00000050 D6 81            [ 8]  107 	sub	a, #0x81
    00000052 38 15            [12]  108 	jr	C, 00112$
                                    109 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:51: ghostyX += 1;
    00000054 21r00r00         [12]  110 	ld	hl, #_ghostyX
    00000057 2A               [ 8]  111 	ld	a, (hl+)
    00000058 5F               [ 4]  112 	ld	e, a
    00000059 3A               [ 8]  113 	ld	a, (hl-)
    0000005A 57               [ 4]  114 	ld	d, a
    0000005B 13               [ 8]  115 	inc	de
    0000005C 7B               [ 4]  116 	ld	a, e
    0000005D 22               [ 8]  117 	ld	(hl+), a
    0000005E 72               [ 8]  118 	ld	(hl), d
                                    119 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:52: fractionX -= (1<<PIXEL_SHIFT);
    0000005F 78               [ 4]  120 	ld	a,b
    00000060 3D               [ 4]  121 	dec	a
    00000061 21r00r00         [12]  122 	ld	hl, #_fractionX
    00000064 71               [ 8]  123 	ld	(hl), c
    00000065 23               [ 8]  124 	inc	hl
    00000066 77               [ 8]  125 	ld	(hl), a
    00000067 18 DE            [12]  126 	jr	00109$
                                    127 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:55: while(fractionX <= -(1<<PIXEL_SHIFT)){
    00000069                        128 00112$:
    00000069 21r00r00         [12]  129 	ld	hl, #_fractionX
    0000006C 2A               [ 8]  130 	ld	a, (hl+)
    0000006D 47               [ 4]  131 	ld	b, a
    0000006E 4E               [ 8]  132 	ld	c, (hl)
    0000006F 59               [ 4]  133 	ld	e, c
    00000070 16 FF            [ 8]  134 	ld	d, #0xff
    00000072 AF               [ 4]  135 	xor	a, a
    00000073 B8               [ 4]  136 	cp	a, b
    00000074 3E FF            [ 8]  137 	ld	a, #0xff
    00000076 99               [ 4]  138 	sbc	a, c
    00000077 CB 7B            [ 8]  139 	bit	7, e
    00000079 28 07            [12]  140 	jr	Z, 00197$
    0000007B CB 7A            [ 8]  141 	bit	7, d
    0000007D 20 08            [12]  142 	jr	NZ, 00198$
    0000007F BF               [ 4]  143 	cp	a, a
    00000080 18 05            [12]  144 	jr	00198$
    00000082                        145 00197$:
    00000082 CB 7A            [ 8]  146 	bit	7, d
    00000084 28 01            [12]  147 	jr	Z, 00198$
    00000086 37               [ 4]  148 	scf
    00000087                        149 00198$:
    00000087 38 15            [12]  150 	jr	C, 00114$
                                    151 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:56: ghostyX -=1;
    00000089 21r00r00         [12]  152 	ld	hl, #_ghostyX
    0000008C 2A               [ 8]  153 	ld	a, (hl+)
    0000008D 5F               [ 4]  154 	ld	e, a
    0000008E 3A               [ 8]  155 	ld	a, (hl-)
    0000008F 57               [ 4]  156 	ld	d, a
    00000090 1B               [ 8]  157 	dec	de
    00000091 7B               [ 4]  158 	ld	a, e
    00000092 22               [ 8]  159 	ld	(hl+), a
    00000093 72               [ 8]  160 	ld	(hl), d
                                    161 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:57: fractionX += (1<<PIXEL_SHIFT);
    00000094 79               [ 4]  162 	ld	a, c
    00000095 3C               [ 4]  163 	inc	a
    00000096 21r00r00         [12]  164 	ld	hl, #_fractionX
    00000099 70               [ 8]  165 	ld	(hl), b
    0000009A 23               [ 8]  166 	inc	hl
    0000009B 77               [ 8]  167 	ld	(hl), a
    0000009C 18 CB            [12]  168 	jr	00112$
    0000009E                        169 00114$:
                                    170 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:61: if(pcFacing==1){
    0000009E FAr00r00         [16]  171 	ld	a, (#_pcFacing)
    000000A1 3D               [ 4]  172 	dec	a
    000000A2 20 1F            [12]  173 	jr	NZ, 00116$
                                    174 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:62: move_metasprite_ex(ghostyMS,0,0,0,ghostyX,ghostyY);
    000000A4 21r00r00         [12]  175 	ld	hl, #_ghostyY
    000000A7 4E               [ 8]  176 	ld	c, (hl)
    000000A8 21r00r00         [12]  177 	ld	hl, #_ghostyX
    000000AB 5E               [ 8]  178 	ld	e, (hl)
                                    179 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:160: __current_metasprite = metasprite;
    000000AC 21r00r00         [12]  180 	ld	hl, #___current_metasprite
    000000AF 3Er00            [ 8]  181 	ld	a, #<(_ghostyMS)
    000000B1 22               [ 8]  182 	ld	(hl+), a
    000000B2 36s00            [12]  183 	ld	(hl), #>(_ghostyMS)
                                    184 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:161: __current_base_tile = base_tile;
    000000B4 21r00r00         [12]  185 	ld	hl, #___current_base_tile
    000000B7 36 00            [12]  186 	ld	(hl), #0x00
                                    187 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:162: __current_base_prop = base_prop;
    000000B9 21r00r00         [12]  188 	ld	hl, #___current_base_prop
    000000BC 36 00            [12]  189 	ld	(hl), #0x00
                                    190 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:163: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
    000000BE 51               [ 4]  191 	ld	d, c
    000000BF AF               [ 4]  192 	xor	a, a
    000000C0 CDr00r00         [24]  193 	call	___move_metasprite
                                    194 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:62: move_metasprite_ex(ghostyMS,0,0,0,ghostyX,ghostyY);
    000000C3                        195 00116$:
                                    196 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:65: if(pcFacing==0){
    000000C3 FAr00r00         [16]  197 	ld	a, (#_pcFacing)
    000000C6 B7               [ 4]  198 	or	a, a
    000000C7 C0               [20]  199 	ret	NZ
                                    200 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:66: move_metasprite_flipx(ghostyMS,0,0,0,ghostyX,ghostyY);
    000000C8 21r00r00         [12]  201 	ld	hl, #_ghostyY
    000000CB 4E               [ 8]  202 	ld	c, (hl)
    000000CC 21r00r00         [12]  203 	ld	hl, #_ghostyX
    000000CF 46               [ 8]  204 	ld	b, (hl)
                                    205 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:200: __current_metasprite = metasprite;
    000000D0 21r00r00         [12]  206 	ld	hl, #___current_metasprite
    000000D3 3Er00            [ 8]  207 	ld	a, #<(_ghostyMS)
    000000D5 22               [ 8]  208 	ld	(hl+), a
    000000D6 36s00            [12]  209 	ld	(hl), #>(_ghostyMS)
                                    210 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:201: __current_base_tile = base_tile;
    000000D8 21r00r00         [12]  211 	ld	hl, #___current_base_tile
    000000DB 36 00            [12]  212 	ld	(hl), #0x00
                                    213 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:202: __current_base_prop = base_prop;
    000000DD 21r00r00         [12]  214 	ld	hl, #___current_base_prop
    000000E0 36 00            [12]  215 	ld	(hl), #0x00
                                    216 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:203: return __move_metasprite_flipx(base_sprite, (y << 8) | (uint8_t)(x - 8u));
    000000E2 51               [ 4]  217 	ld	d, c
    000000E3 78               [ 4]  218 	ld	a, b
    000000E4 C6 F8            [ 8]  219 	add	a, #0xf8
    000000E6 5F               [ 4]  220 	ld	e, a
    000000E7 AF               [ 4]  221 	xor	a, a
                                    222 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:66: move_metasprite_flipx(ghostyMS,0,0,0,ghostyX,ghostyY);
                                    223 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\joypadMgmt.c:68: }
    000000E8 C3r00r00         [16]  224 	jp	___move_metasprite_flipx
                                    225 	.area _CODE
                                    226 	.area _INITIALIZER
                                    227 	.area _CABS (ABS)
