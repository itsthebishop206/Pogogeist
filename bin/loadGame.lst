                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module loadGame
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _initBoneTable
                                     12 	.globl _initrand
                                     13 	.globl _bkgInterrupts
                                     14 	.globl _set_default_palette
                                     15 	.globl _set_sprite_palette
                                     16 	.globl _set_bkg_palette
                                     17 	.globl _set_sprite_data
                                     18 	.globl _set_bkg_tiles
                                     19 	.globl _set_bkg_data
                                     20 	.globl _vsync
                                     21 	.globl _set_interrupts
                                     22 	.globl _waitpad
                                     23 	.globl _add_LCD
                                     24 	.globl _spriteSize
                                     25 	.globl _setBkgd
                                     26 	.globl _setGhosty
                                     27 	.globl _setBone
                                     28 	.globl _smallDelay
                                     29 	.globl _gameFirstLoad
                                     30 ;--------------------------------------------------------
                                     31 ; special function registers
                                     32 ;--------------------------------------------------------
                                     33 ;--------------------------------------------------------
                                     34 ; ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area _DATA
    00000000                         37 _activeBones:
    00000000                         38 	.ds 1
    00000001                         39 _boneCounter:
    00000001                         40 	.ds 1
    00000002                         41 _frameCounter:
    00000002                         42 	.ds 1
                                     43 ;--------------------------------------------------------
                                     44 ; ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area _INITIALIZED
    00000000                         47 _spriteSize::
    00000000                         48 	.ds 1
                                     49 ;--------------------------------------------------------
                                     50 ; absolute external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area _DABS (ABS)
                                     53 ;--------------------------------------------------------
                                     54 ; global & static initialisations
                                     55 ;--------------------------------------------------------
                                     56 	.area _HOME
                                     57 	.area _GSINIT
                                     58 	.area _GSFINAL
                                     59 	.area _GSINIT
                                     60 ;--------------------------------------------------------
                                     61 ; Home
                                     62 ;--------------------------------------------------------
                                     63 	.area _HOME
                                     64 	.area _HOME
                                     65 ;--------------------------------------------------------
                                     66 ; code
                                     67 ;--------------------------------------------------------
                                     68 	.area _CODE
                                     69 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:20: void setBkgd(void){
                                     70 ;	---------------------------------
                                     71 ; Function setBkgd
                                     72 ; ---------------------------------
    00000000                         73 _setBkgd::
                                     74 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:22: set_bkg_data(0, bkgd_TILE_COUNT, bkgd_tiles);    
    00000000 11r00r00         [12]   75 	ld	de, #_bkgd_tiles
    00000003 D5               [16]   76 	push	de
    00000004 21 00 06         [12]   77 	ld	hl, #0x600
    00000007 E5               [16]   78 	push	hl
    00000008 CDr00r00         [24]   79 	call	_set_bkg_data
    0000000B E8 04            [16]   80 	add	sp, #4
                                     81 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:23: set_bkg_palette(0,1,bkgd_palettes);
    0000000D 11r00r00         [12]   82 	ld	de, #_bkgd_palettes
    00000010 D5               [16]   83 	push	de
    00000011 AF               [ 4]   84 	xor	a, a
    00000012 3C               [ 4]   85 	inc	a
    00000013 F5               [16]   86 	push	af
    00000014 CDr00r00         [24]   87 	call	_set_bkg_palette
    00000017 E8 04            [16]   88 	add	sp, #4
                                     89 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:25: set_bkg_tiles(0, 0, 32, 18, bkgd_map_attributes);
    00000019 01r00r00         [12]   90 	ld	bc, #_bkgd_map+0
    0000001C C5               [16]   91 	push	bc
    0000001D 21 20 12         [12]   92 	ld	hl, #0x1220
    00000020 E5               [16]   93 	push	hl
    00000021 AF               [ 4]   94 	xor	a, a
    00000022 0F               [ 4]   95 	rrca
    00000023 F5               [16]   96 	push	af
    00000024 CDr00r00         [24]   97 	call	_set_bkg_tiles
    00000027 E8 06            [16]   98 	add	sp, #6
                                     99 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:27: set_bkg_tiles(0,0,32,18,bkgd_map);
    00000029 C5               [16]  100 	push	bc
    0000002A 21 20 12         [12]  101 	ld	hl, #0x1220
    0000002D E5               [16]  102 	push	hl
    0000002E AF               [ 4]  103 	xor	a, a
    0000002F 0F               [ 4]  104 	rrca
    00000030 F5               [16]  105 	push	af
    00000031 CDr00r00         [24]  106 	call	_set_bkg_tiles
    00000034 E8 06            [16]  107 	add	sp, #6
                                    108 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:28: }
    00000036 C9               [16]  109 	ret
                                    110 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:30: void setGhosty(void){
                                    111 ;	---------------------------------
                                    112 ; Function setGhosty
                                    113 ; ---------------------------------
    00000037                        114 _setGhosty::
                                    115 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:32: set_sprite_data(0, 4, ghostyTiles);
    00000037 11r00r00         [12]  116 	ld	de, #_ghostyTiles
    0000003A D5               [16]  117 	push	de
    0000003B 21 00 04         [12]  118 	ld	hl, #0x400
    0000003E E5               [16]  119 	push	hl
    0000003F CDr00r00         [24]  120 	call	_set_sprite_data
    00000042 E8 04            [16]  121 	add	sp, #4
                                    122 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:33: move_metasprite_ex(ghostyMS,0,0,0,ghostyX,ghostyY);
    00000044 21r00r00         [12]  123 	ld	hl, #_ghostyY
    00000047 4E               [ 8]  124 	ld	c, (hl)
    00000048 21r00r00         [12]  125 	ld	hl, #_ghostyX
    0000004B 5E               [ 8]  126 	ld	e, (hl)
                                    127 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:160: __current_metasprite = metasprite;
    0000004C 21r00r00         [12]  128 	ld	hl, #___current_metasprite
    0000004F 3Er00            [ 8]  129 	ld	a, #<(_ghostyMS)
    00000051 22               [ 8]  130 	ld	(hl+), a
    00000052 36s00            [12]  131 	ld	(hl), #>(_ghostyMS)
                                    132 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:161: __current_base_tile = base_tile;
    00000054 21r00r00         [12]  133 	ld	hl, #___current_base_tile
    00000057 36 00            [12]  134 	ld	(hl), #0x00
                                    135 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:162: __current_base_prop = base_prop;
    00000059 21r00r00         [12]  136 	ld	hl, #___current_base_prop
    0000005C 36 00            [12]  137 	ld	(hl), #0x00
                                    138 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:163: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
    0000005E 51               [ 4]  139 	ld	d, c
    0000005F AF               [ 4]  140 	xor	a, a
    00000060 CDr00r00         [24]  141 	call	___move_metasprite
                                    142 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:35: OBP0_REG=DMG_PALETTE(DMG_BLACK, DMG_DARK_GRAY, DMG_LITE_GRAY, DMG_WHITE);
    00000063 3E 1B            [ 8]  143 	ld	a, #0x1b
    00000065 E0r00            [12]  144 	ldh	(_OBP0_REG + 0), a
                                    145 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:36: }
    00000067 C9               [16]  146 	ret
                                    147 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:38: void setBone(void){
                                    148 ;	---------------------------------
                                    149 ; Function setBone
                                    150 ; ---------------------------------
    00000068                        151 _setBone::
                                    152 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:40: set_sprite_data(4,2,boneTile);
    00000068 11r00r00         [12]  153 	ld	de, #_boneTile
    0000006B D5               [16]  154 	push	de
    0000006C 3E 02            [ 8]  155 	ld	a, #0x02
    0000006E F5               [16]  156 	push	af
    0000006F 33               [ 8]  157 	inc	sp
    00000070 3E 04            [ 8]  158 	ld	a, #0x04
    00000072 F5               [16]  159 	push	af
    00000073 33               [ 8]  160 	inc	sp
    00000074 CDr00r00         [24]  161 	call	_set_sprite_data
    00000077 E8 04            [16]  162 	add	sp, #4
                                    163 ;c:\users\wsajj\gbdev\gbdk\include\gb\gb.h:1934: shadow_OAM[nb].prop=prop;
    00000079 21r13r00         [12]  164 	ld	hl, #(_shadow_OAM + 19)
    0000007C 36 00            [12]  165 	ld	(hl), #0x00
                                    166 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:43: initBoneTable();
                                    167 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:44: }
    0000007E C3r00r00         [16]  168 	jp	_initBoneTable
                                    169 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:46: void smallDelay(uint8_t numloops){
                                    170 ;	---------------------------------
                                    171 ; Function smallDelay
                                    172 ; ---------------------------------
    00000081                        173 _smallDelay::
    00000081 4F               [ 4]  174 	ld	c, a
                                    175 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:49: for(i = 0; i < numloops; i++){
    00000082 06 00            [ 8]  176 	ld	b, #0x00
    00000084                        177 00103$:
    00000084 78               [ 4]  178 	ld	a, b
    00000085 91               [ 4]  179 	sub	a, c
    00000086 D0               [20]  180 	ret	NC
                                    181 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:50: vsync();
    00000087 CDr00r00         [24]  182 	call	_vsync
                                    183 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:49: for(i = 0; i < numloops; i++){
    0000008A 04               [ 4]  184 	inc	b
                                    185 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:52: }
    0000008B 18 F7            [12]  186 	jr	00103$
                                    187 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:54: void gameFirstLoad(void){
                                    188 ;	---------------------------------
                                    189 ; Function gameFirstLoad
                                    190 ; ---------------------------------
    0000008D                        191 _gameFirstLoad::
                                    192 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:56: NR52_REG = 0x80;
    0000008D 3E 80            [ 8]  193 	ld	a, #0x80
    0000008F E0r00            [12]  194 	ldh	(_NR52_REG + 0), a
                                    195 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:57: NR50_REG = 0x77; 
    00000091 3E 77            [ 8]  196 	ld	a, #0x77
    00000093 E0r00            [12]  197 	ldh	(_NR50_REG + 0), a
                                    198 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:58: NR51_REG = 0xFF;
    00000095 3E FF            [ 8]  199 	ld	a, #0xff
    00000097 E0r00            [12]  200 	ldh	(_NR51_REG + 0), a
                                    201 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:60: SHOW_BKG;
    00000099 F0r00            [12]  202 	ldh	a, (_LCDC_REG + 0)
    0000009B F6 01            [ 8]  203 	or	a, #0x01
    0000009D E0r00            [12]  204 	ldh	(_LCDC_REG + 0), a
                                    205 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:62: SHOW_SPRITES;
    0000009F F0r00            [12]  206 	ldh	a, (_LCDC_REG + 0)
    000000A1 F6 02            [ 8]  207 	or	a, #0x02
    000000A3 E0r00            [12]  208 	ldh	(_LCDC_REG + 0), a
                                    209 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:63: DISPLAY_ON;
    000000A5 F0r00            [12]  210 	ldh	a, (_LCDC_REG + 0)
    000000A7 F6 80            [ 8]  211 	or	a, #0x80
    000000A9 E0r00            [12]  212 	ldh	(_LCDC_REG + 0), a
                                    213 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:65: STAT_REG |= 0x40;
    000000AB F0r00            [12]  214 	ldh	a, (_STAT_REG + 0)
    000000AD F6 40            [ 8]  215 	or	a, #0x40
    000000AF E0r00            [12]  216 	ldh	(_STAT_REG + 0), a
                                    217 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:66: LYC_REG=0;
    000000B1 AF               [ 4]  218 	xor	a, a
    000000B2 E0r00            [12]  219 	ldh	(_LYC_REG + 0), a
                                    220 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:68: add_LCD(bkgInterrupts);
    000000B4 11r00r00         [12]  221 	ld	de, #_bkgInterrupts
    000000B7 CDr00r00         [24]  222 	call	_add_LCD
                                    223 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:69: set_interrupts(LCD_IFLAG | VBL_IFLAG);
    000000BA 3E 03            [ 8]  224 	ld	a, #0x03
    000000BC CDr00r00         [24]  225 	call	_set_interrupts
                                    226 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:72: waitpad(J_START);
    000000BF 3E 80            [ 8]  227 	ld	a, #0x80
    000000C1 CDr00r00         [24]  228 	call	_waitpad
                                    229 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:73: uint16_t seed = LY_REG;
    000000C4 F0r00            [12]  230 	ldh	a, (_LY_REG + 0)
    000000C6 4F               [ 4]  231 	ld	c, a
                                    232 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:74: seed |= (uint16_t)DIV_REG << 8;
    000000C7 F0r00            [12]  233 	ldh	a, (_DIV_REG + 0)
    000000C9 47               [ 4]  234 	ld	b, a
                                    235 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:75: initrand(seed);
    000000CA C5               [16]  236 	push	bc
    000000CB CDr00r00         [24]  237 	call	_initrand
    000000CE E1               [12]  238 	pop	hl
                                    239 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:77: set_default_palette();
    000000CF CDr00r00         [24]  240 	call	_set_default_palette
                                    241 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:78: set_sprite_palette(0,1,ghosty_palettes);
    000000D2 11r00r00         [12]  242 	ld	de, #_ghosty_palettes
    000000D5 D5               [16]  243 	push	de
    000000D6 AF               [ 4]  244 	xor	a, a
    000000D7 3C               [ 4]  245 	inc	a
    000000D8 F5               [16]  246 	push	af
    000000D9 CDr00r00         [24]  247 	call	_set_sprite_palette
    000000DC E8 04            [16]  248 	add	sp, #4
                                    249 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:79: set_bkg_palette(0,1,bkgd_palettes);
    000000DE 11r00r00         [12]  250 	ld	de, #_bkgd_palettes
    000000E1 D5               [16]  251 	push	de
    000000E2 3E 01            [ 8]  252 	ld	a, #0x01
    000000E4 F5               [16]  253 	push	af
    000000E5 33               [ 8]  254 	inc	sp
    000000E6 AF               [ 4]  255 	xor	a, a
    000000E7 F5               [16]  256 	push	af
    000000E8 33               [ 8]  257 	inc	sp
    000000E9 CDr00r00         [24]  258 	call	_set_bkg_palette
    000000EC E8 04            [16]  259 	add	sp, #4
                                    260 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:80: setBkgd();
    000000EE CDr00r00         [24]  261 	call	_setBkgd
                                    262 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:81: setGhosty();
    000000F1 CDr37r00         [24]  263 	call	_setGhosty
                                    264 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:82: setBone();
                                    265 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:83: }
    000000F4 C3r68r00         [16]  266 	jp	_setBone
                                    267 	.area _CODE
                                    268 	.area _INITIALIZER
    00000000                        269 __xinit__spriteSize:
    00000000 08                     270 	.db #0x08	; 8
                                    271 	.area _CABS (ABS)
