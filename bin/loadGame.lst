                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module loadGame
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _initBoneTable
                                     12 	.globl _initrand
                                     13 	.globl _bkgInterrupts
                                     14 	.globl _set_default_palette
                                     15 	.globl _set_sprite_palette
                                     16 	.globl _set_bkg_palette
                                     17 	.globl _set_sprite_data
                                     18 	.globl _set_bkg_tiles
                                     19 	.globl _set_bkg_data
                                     20 	.globl _vsync
                                     21 	.globl _set_interrupts
                                     22 	.globl _waitpad
                                     23 	.globl _add_LCD
                                     24 	.globl _spriteSize
                                     25 	.globl _setBkgd
                                     26 	.globl _setGhosty
                                     27 	.globl _setBone
                                     28 	.globl _smallDelay
                                     29 	.globl _gameFirstLoad
                                     30 ;--------------------------------------------------------
                                     31 ; special function registers
                                     32 ;--------------------------------------------------------
                                     33 ;--------------------------------------------------------
                                     34 ; ram data
                                     35 ;--------------------------------------------------------
                                     36 	.area _DATA
                                     37 ;--------------------------------------------------------
                                     38 ; ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area _INITIALIZED
    00000000                         41 _spriteSize::
    00000000                         42 	.ds 1
                                     43 ;--------------------------------------------------------
                                     44 ; absolute external ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area _DABS (ABS)
                                     47 ;--------------------------------------------------------
                                     48 ; global & static initialisations
                                     49 ;--------------------------------------------------------
                                     50 	.area _HOME
                                     51 	.area _GSINIT
                                     52 	.area _GSFINAL
                                     53 	.area _GSINIT
                                     54 ;--------------------------------------------------------
                                     55 ; Home
                                     56 ;--------------------------------------------------------
                                     57 	.area _HOME
                                     58 	.area _HOME
                                     59 ;--------------------------------------------------------
                                     60 ; code
                                     61 ;--------------------------------------------------------
                                     62 	.area _CODE
                                     63 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:20: void setBkgd(void){
                                     64 ;	---------------------------------
                                     65 ; Function setBkgd
                                     66 ; ---------------------------------
    00000000                         67 _setBkgd::
                                     68 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:22: set_bkg_data(0, bkgd_TILE_COUNT, bkgd_tiles);    
    00000000 11r00r00         [12]   69 	ld	de, #_bkgd_tiles
    00000003 D5               [16]   70 	push	de
    00000004 21 00 06         [12]   71 	ld	hl, #0x600
    00000007 E5               [16]   72 	push	hl
    00000008 CDr00r00         [24]   73 	call	_set_bkg_data
    0000000B E8 04            [16]   74 	add	sp, #4
                                     75 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:23: set_bkg_palette(0,1,bkgd_palettes);
    0000000D 11r00r00         [12]   76 	ld	de, #_bkgd_palettes
    00000010 D5               [16]   77 	push	de
    00000011 AF               [ 4]   78 	xor	a, a
    00000012 3C               [ 4]   79 	inc	a
    00000013 F5               [16]   80 	push	af
    00000014 CDr00r00         [24]   81 	call	_set_bkg_palette
    00000017 E8 04            [16]   82 	add	sp, #4
                                     83 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:25: set_bkg_tiles(0, 0, 32, 18, bkgd_map_attributes);
    00000019 01r00r00         [12]   84 	ld	bc, #_bkgd_map+0
    0000001C C5               [16]   85 	push	bc
    0000001D 21 20 12         [12]   86 	ld	hl, #0x1220
    00000020 E5               [16]   87 	push	hl
    00000021 AF               [ 4]   88 	xor	a, a
    00000022 0F               [ 4]   89 	rrca
    00000023 F5               [16]   90 	push	af
    00000024 CDr00r00         [24]   91 	call	_set_bkg_tiles
    00000027 E8 06            [16]   92 	add	sp, #6
                                     93 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:27: set_bkg_tiles(0,0,32,18,bkgd_map);
    00000029 C5               [16]   94 	push	bc
    0000002A 21 20 12         [12]   95 	ld	hl, #0x1220
    0000002D E5               [16]   96 	push	hl
    0000002E AF               [ 4]   97 	xor	a, a
    0000002F 0F               [ 4]   98 	rrca
    00000030 F5               [16]   99 	push	af
    00000031 CDr00r00         [24]  100 	call	_set_bkg_tiles
    00000034 E8 06            [16]  101 	add	sp, #6
                                    102 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:28: }
    00000036 C9               [16]  103 	ret
                                    104 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:30: void setGhosty(void){
                                    105 ;	---------------------------------
                                    106 ; Function setGhosty
                                    107 ; ---------------------------------
    00000037                        108 _setGhosty::
                                    109 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:32: set_sprite_data(0, 4, ghostyTiles);
    00000037 11r00r00         [12]  110 	ld	de, #_ghostyTiles
    0000003A D5               [16]  111 	push	de
    0000003B 21 00 04         [12]  112 	ld	hl, #0x400
    0000003E E5               [16]  113 	push	hl
    0000003F CDr00r00         [24]  114 	call	_set_sprite_data
    00000042 E8 04            [16]  115 	add	sp, #4
                                    116 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:33: move_metasprite_ex(ghostyMS,0,0,0,ghostyX,ghostyY);
    00000044 21r00r00         [12]  117 	ld	hl, #_ghostyY
    00000047 4E               [ 8]  118 	ld	c, (hl)
    00000048 21r00r00         [12]  119 	ld	hl, #_ghostyX
    0000004B 5E               [ 8]  120 	ld	e, (hl)
                                    121 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:160: __current_metasprite = metasprite;
    0000004C 21r00r00         [12]  122 	ld	hl, #___current_metasprite
    0000004F 3Er00            [ 8]  123 	ld	a, #<(_ghostyMS)
    00000051 22               [ 8]  124 	ld	(hl+), a
    00000052 36s00            [12]  125 	ld	(hl), #>(_ghostyMS)
                                    126 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:161: __current_base_tile = base_tile;
    00000054 21r00r00         [12]  127 	ld	hl, #___current_base_tile
    00000057 36 00            [12]  128 	ld	(hl), #0x00
                                    129 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:162: __current_base_prop = base_prop;
    00000059 21r00r00         [12]  130 	ld	hl, #___current_base_prop
    0000005C 36 00            [12]  131 	ld	(hl), #0x00
                                    132 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:163: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
    0000005E 51               [ 4]  133 	ld	d, c
    0000005F AF               [ 4]  134 	xor	a, a
    00000060 CDr00r00         [24]  135 	call	___move_metasprite
                                    136 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:35: OBP0_REG=DMG_PALETTE(DMG_BLACK, DMG_DARK_GRAY, DMG_LITE_GRAY, DMG_WHITE);
    00000063 3E 1B            [ 8]  137 	ld	a, #0x1b
    00000065 E0r00            [12]  138 	ldh	(_OBP0_REG + 0), a
                                    139 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:36: }
    00000067 C9               [16]  140 	ret
                                    141 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:38: void setBone(void){
                                    142 ;	---------------------------------
                                    143 ; Function setBone
                                    144 ; ---------------------------------
    00000068                        145 _setBone::
                                    146 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:40: set_sprite_data(4,2,boneTile);
    00000068 11r00r00         [12]  147 	ld	de, #_boneTile
    0000006B D5               [16]  148 	push	de
    0000006C 21 04 02         [12]  149 	ld	hl, #0x204
    0000006F E5               [16]  150 	push	hl
    00000070 CDr00r00         [24]  151 	call	_set_sprite_data
    00000073 E8 04            [16]  152 	add	sp, #4
                                    153 ;c:\users\wsajj\gbdev\gbdk\include\gb\gb.h:1934: shadow_OAM[nb].prop=prop;
    00000075 21r13r00         [12]  154 	ld	hl, #(_shadow_OAM + 19)
    00000078 36 00            [12]  155 	ld	(hl), #0x00
                                    156 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:42: move_metasprite_ex(boneMS,4,0,4,100,130);
                                    157 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:160: __current_metasprite = metasprite;
    0000007A 21r00r00         [12]  158 	ld	hl, #___current_metasprite
    0000007D 3Er00            [ 8]  159 	ld	a, #<(_boneMS)
    0000007F 22               [ 8]  160 	ld	(hl+), a
    00000080 36s00            [12]  161 	ld	(hl), #>(_boneMS)
                                    162 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:161: __current_base_tile = base_tile;
    00000082 21r00r00         [12]  163 	ld	hl, #___current_base_tile
    00000085 36 04            [12]  164 	ld	(hl), #0x04
                                    165 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:162: __current_base_prop = base_prop;
    00000087 21r00r00         [12]  166 	ld	hl, #___current_base_prop
    0000008A 36 00            [12]  167 	ld	(hl), #0x00
                                    168 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:163: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
    0000008C 11 64 82         [12]  169 	ld	de, #0x8264
    0000008F 3E 04            [ 8]  170 	ld	a, #0x04
    00000091 CDr00r00         [24]  171 	call	___move_metasprite
                                    172 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:43: initBoneTable();
                                    173 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:44: }
    00000094 C3r00r00         [16]  174 	jp	_initBoneTable
                                    175 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:46: void smallDelay(uint8_t numloops){
                                    176 ;	---------------------------------
                                    177 ; Function smallDelay
                                    178 ; ---------------------------------
    00000097                        179 _smallDelay::
    00000097 4F               [ 4]  180 	ld	c, a
                                    181 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:49: for(i = 0; i < numloops; i++){
    00000098 06 00            [ 8]  182 	ld	b, #0x00
    0000009A                        183 00103$:
    0000009A 78               [ 4]  184 	ld	a, b
    0000009B 91               [ 4]  185 	sub	a, c
    0000009C D0               [20]  186 	ret	NC
                                    187 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:50: vsync();
    0000009D CDr00r00         [24]  188 	call	_vsync
                                    189 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:49: for(i = 0; i < numloops; i++){
    000000A0 04               [ 4]  190 	inc	b
                                    191 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:52: }
    000000A1 18 F7            [12]  192 	jr	00103$
                                    193 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:54: void gameFirstLoad(void){
                                    194 ;	---------------------------------
                                    195 ; Function gameFirstLoad
                                    196 ; ---------------------------------
    000000A3                        197 _gameFirstLoad::
                                    198 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:56: NR52_REG = 0x80;
    000000A3 3E 80            [ 8]  199 	ld	a, #0x80
    000000A5 E0r00            [12]  200 	ldh	(_NR52_REG + 0), a
                                    201 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:57: NR50_REG = 0x77; 
    000000A7 3E 77            [ 8]  202 	ld	a, #0x77
    000000A9 E0r00            [12]  203 	ldh	(_NR50_REG + 0), a
                                    204 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:58: NR51_REG = 0xFF;
    000000AB 3E FF            [ 8]  205 	ld	a, #0xff
    000000AD E0r00            [12]  206 	ldh	(_NR51_REG + 0), a
                                    207 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:60: SHOW_BKG;
    000000AF F0r00            [12]  208 	ldh	a, (_LCDC_REG + 0)
    000000B1 F6 01            [ 8]  209 	or	a, #0x01
    000000B3 E0r00            [12]  210 	ldh	(_LCDC_REG + 0), a
                                    211 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:61: SHOW_SPRITES;
    000000B5 F0r00            [12]  212 	ldh	a, (_LCDC_REG + 0)
    000000B7 F6 02            [ 8]  213 	or	a, #0x02
    000000B9 E0r00            [12]  214 	ldh	(_LCDC_REG + 0), a
                                    215 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:62: DISPLAY_ON;
    000000BB F0r00            [12]  216 	ldh	a, (_LCDC_REG + 0)
    000000BD F6 80            [ 8]  217 	or	a, #0x80
    000000BF E0r00            [12]  218 	ldh	(_LCDC_REG + 0), a
                                    219 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:64: STAT_REG |= 0x40;
    000000C1 F0r00            [12]  220 	ldh	a, (_STAT_REG + 0)
    000000C3 F6 40            [ 8]  221 	or	a, #0x40
    000000C5 E0r00            [12]  222 	ldh	(_STAT_REG + 0), a
                                    223 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:65: LYC_REG=0;
    000000C7 AF               [ 4]  224 	xor	a, a
    000000C8 E0r00            [12]  225 	ldh	(_LYC_REG + 0), a
                                    226 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:67: add_LCD(bkgInterrupts);
    000000CA 11r00r00         [12]  227 	ld	de, #_bkgInterrupts
    000000CD CDr00r00         [24]  228 	call	_add_LCD
                                    229 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:68: set_interrupts(LCD_IFLAG | VBL_IFLAG);
    000000D0 3E 03            [ 8]  230 	ld	a, #0x03
    000000D2 CDr00r00         [24]  231 	call	_set_interrupts
                                    232 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:71: waitpad(J_START);
    000000D5 3E 80            [ 8]  233 	ld	a, #0x80
    000000D7 CDr00r00         [24]  234 	call	_waitpad
                                    235 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:72: uint16_t seed = LY_REG;
    000000DA F0r00            [12]  236 	ldh	a, (_LY_REG + 0)
    000000DC 4F               [ 4]  237 	ld	c, a
                                    238 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:73: seed |= (uint16_t)DIV_REG << 8;
    000000DD F0r00            [12]  239 	ldh	a, (_DIV_REG + 0)
    000000DF 47               [ 4]  240 	ld	b, a
                                    241 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:74: initrand(seed);
    000000E0 C5               [16]  242 	push	bc
    000000E1 CDr00r00         [24]  243 	call	_initrand
    000000E4 E1               [12]  244 	pop	hl
                                    245 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:76: set_default_palette();
    000000E5 CDr00r00         [24]  246 	call	_set_default_palette
                                    247 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:77: set_sprite_palette(0,1,ghosty_palettes);
    000000E8 11r00r00         [12]  248 	ld	de, #_ghosty_palettes
    000000EB D5               [16]  249 	push	de
    000000EC AF               [ 4]  250 	xor	a, a
    000000ED 3C               [ 4]  251 	inc	a
    000000EE F5               [16]  252 	push	af
    000000EF CDr00r00         [24]  253 	call	_set_sprite_palette
    000000F2 E8 04            [16]  254 	add	sp, #4
                                    255 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:78: set_bkg_palette(0,1,bkgd_palettes);
    000000F4 11r00r00         [12]  256 	ld	de, #_bkgd_palettes
    000000F7 D5               [16]  257 	push	de
    000000F8 3E 01            [ 8]  258 	ld	a, #0x01
    000000FA F5               [16]  259 	push	af
    000000FB 33               [ 8]  260 	inc	sp
    000000FC AF               [ 4]  261 	xor	a, a
    000000FD F5               [16]  262 	push	af
    000000FE 33               [ 8]  263 	inc	sp
    000000FF CDr00r00         [24]  264 	call	_set_bkg_palette
    00000102 E8 04            [16]  265 	add	sp, #4
                                    266 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:79: setBkgd();
    00000104 CDr00r00         [24]  267 	call	_setBkgd
                                    268 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:80: setGhosty();
    00000107 CDr37r00         [24]  269 	call	_setGhosty
                                    270 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:81: setBone();
                                    271 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:82: }
    0000010A C3r68r00         [16]  272 	jp	_setBone
                                    273 	.area _CODE
                                    274 	.area _INITIALIZER
    00000000                        275 __xinit__spriteSize:
    00000000 08                     276 	.db #0x08	; 8
                                    277 	.area _CABS (ABS)
