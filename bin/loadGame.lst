                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module loadGame
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _bkgInterrupts
                                     12 	.globl _set_sprite_palette
                                     13 	.globl _set_bkg_palette
                                     14 	.globl _set_sprite_data
                                     15 	.globl _set_bkg_tiles
                                     16 	.globl _set_bkg_data
                                     17 	.globl _set_interrupts
                                     18 	.globl _add_LCD
                                     19 	.globl _spriteSize
                                     20 	.globl _setBkgd
                                     21 	.globl _setGhosty
                                     22 	.globl _setBone
                                     23 	.globl _gameFirstLoad
                                     24 ;--------------------------------------------------------
                                     25 ; special function registers
                                     26 ;--------------------------------------------------------
                                     27 ;--------------------------------------------------------
                                     28 ; ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area _DATA
                                     31 ;--------------------------------------------------------
                                     32 ; ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area _INITIALIZED
    00000000                         35 _spriteSize::
    00000000                         36 	.ds 1
                                     37 ;--------------------------------------------------------
                                     38 ; absolute external ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area _DABS (ABS)
                                     41 ;--------------------------------------------------------
                                     42 ; global & static initialisations
                                     43 ;--------------------------------------------------------
                                     44 	.area _HOME
                                     45 	.area _GSINIT
                                     46 	.area _GSFINAL
                                     47 	.area _GSINIT
                                     48 ;--------------------------------------------------------
                                     49 ; Home
                                     50 ;--------------------------------------------------------
                                     51 	.area _HOME
                                     52 	.area _HOME
                                     53 ;--------------------------------------------------------
                                     54 ; code
                                     55 ;--------------------------------------------------------
                                     56 	.area _CODE
                                     57 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:12: void setBkgd(void){
                                     58 ;	---------------------------------
                                     59 ; Function setBkgd
                                     60 ; ---------------------------------
    00000000                         61 _setBkgd::
                                     62 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:14: set_bkg_data(0, bkgd_TILE_COUNT, bkgd_tiles);    
    00000000 11r00r00         [12]   63 	ld	de, #_bkgd_tiles
    00000003 D5               [16]   64 	push	de
    00000004 21 00 06         [12]   65 	ld	hl, #0x600
    00000007 E5               [16]   66 	push	hl
    00000008 CDr00r00         [24]   67 	call	_set_bkg_data
    0000000B E8 04            [16]   68 	add	sp, #4
                                     69 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:15: set_bkg_palette(0,1,bkgd_palettes);
    0000000D 11r00r00         [12]   70 	ld	de, #_bkgd_palettes
    00000010 D5               [16]   71 	push	de
    00000011 AF               [ 4]   72 	xor	a, a
    00000012 3C               [ 4]   73 	inc	a
    00000013 F5               [16]   74 	push	af
    00000014 CDr00r00         [24]   75 	call	_set_bkg_palette
    00000017 E8 04            [16]   76 	add	sp, #4
                                     77 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:17: set_bkg_tiles(0, 0, 32, 18, bkgd_map_attributes);
    00000019 01r00r00         [12]   78 	ld	bc, #_bkgd_map+0
    0000001C C5               [16]   79 	push	bc
    0000001D 21 20 12         [12]   80 	ld	hl, #0x1220
    00000020 E5               [16]   81 	push	hl
    00000021 AF               [ 4]   82 	xor	a, a
    00000022 0F               [ 4]   83 	rrca
    00000023 F5               [16]   84 	push	af
    00000024 CDr00r00         [24]   85 	call	_set_bkg_tiles
    00000027 E8 06            [16]   86 	add	sp, #6
                                     87 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:19: set_bkg_tiles(0,0,32,18,bkgd_map);
    00000029 C5               [16]   88 	push	bc
    0000002A 21 20 12         [12]   89 	ld	hl, #0x1220
    0000002D E5               [16]   90 	push	hl
    0000002E AF               [ 4]   91 	xor	a, a
    0000002F 0F               [ 4]   92 	rrca
    00000030 F5               [16]   93 	push	af
    00000031 CDr00r00         [24]   94 	call	_set_bkg_tiles
    00000034 E8 06            [16]   95 	add	sp, #6
                                     96 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:20: }
    00000036 C9               [16]   97 	ret
                                     98 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:22: void setGhosty(void){
                                     99 ;	---------------------------------
                                    100 ; Function setGhosty
                                    101 ; ---------------------------------
    00000037                        102 _setGhosty::
                                    103 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:24: set_sprite_data(0, 4, ghostyTiles);
    00000037 11r00r00         [12]  104 	ld	de, #_ghostyTiles
    0000003A D5               [16]  105 	push	de
    0000003B 21 00 04         [12]  106 	ld	hl, #0x400
    0000003E E5               [16]  107 	push	hl
    0000003F CDr00r00         [24]  108 	call	_set_sprite_data
    00000042 E8 04            [16]  109 	add	sp, #4
                                    110 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:25: move_metasprite_ex(ghostyMS,0,0,0,ghostyX,ghostyY);
    00000044 21r00r00         [12]  111 	ld	hl, #_ghostyY
    00000047 4E               [ 8]  112 	ld	c, (hl)
    00000048 21r00r00         [12]  113 	ld	hl, #_ghostyX
    0000004B 5E               [ 8]  114 	ld	e, (hl)
                                    115 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:160: __current_metasprite = metasprite;
    0000004C 21r00r00         [12]  116 	ld	hl, #___current_metasprite
    0000004F 3Er00            [ 8]  117 	ld	a, #<(_ghostyMS)
    00000051 22               [ 8]  118 	ld	(hl+), a
    00000052 36s00            [12]  119 	ld	(hl), #>(_ghostyMS)
                                    120 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:161: __current_base_tile = base_tile;
    00000054 21r00r00         [12]  121 	ld	hl, #___current_base_tile
    00000057 36 00            [12]  122 	ld	(hl), #0x00
                                    123 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:162: __current_base_prop = base_prop;
    00000059 21r00r00         [12]  124 	ld	hl, #___current_base_prop
    0000005C 36 00            [12]  125 	ld	(hl), #0x00
                                    126 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:163: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
    0000005E 51               [ 4]  127 	ld	d, c
    0000005F AF               [ 4]  128 	xor	a, a
    00000060 CDr00r00         [24]  129 	call	___move_metasprite
                                    130 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:27: OBP0_REG=DMG_PALETTE(DMG_BLACK, DMG_DARK_GRAY, DMG_LITE_GRAY, DMG_WHITE);
    00000063 3E 1B            [ 8]  131 	ld	a, #0x1b
    00000065 E0r00            [12]  132 	ldh	(_OBP0_REG + 0), a
                                    133 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:28: }
    00000067 C9               [16]  134 	ret
                                    135 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:30: void setBone(void){
                                    136 ;	---------------------------------
                                    137 ; Function setBone
                                    138 ; ---------------------------------
    00000068                        139 _setBone::
                                    140 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:32: set_sprite_data(4,2,boneTile);
    00000068 11r00r00         [12]  141 	ld	de, #_boneTile
    0000006B D5               [16]  142 	push	de
    0000006C 21 04 02         [12]  143 	ld	hl, #0x204
    0000006F E5               [16]  144 	push	hl
    00000070 CDr00r00         [24]  145 	call	_set_sprite_data
    00000073 E8 04            [16]  146 	add	sp, #4
                                    147 ;c:\users\wsajj\gbdev\gbdk\include\gb\gb.h:1934: shadow_OAM[nb].prop=prop;
    00000075 21r13r00         [12]  148 	ld	hl, #(_shadow_OAM + 19)
    00000078 36 00            [12]  149 	ld	(hl), #0x00
                                    150 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:34: move_metasprite_ex(boneMS,4,0,4,120,120);
                                    151 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:160: __current_metasprite = metasprite;
    0000007A 21r00r00         [12]  152 	ld	hl, #___current_metasprite
    0000007D 3Er00            [ 8]  153 	ld	a, #<(_boneMS)
    0000007F 22               [ 8]  154 	ld	(hl+), a
    00000080 36s00            [12]  155 	ld	(hl), #>(_boneMS)
                                    156 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:161: __current_base_tile = base_tile;
    00000082 21r00r00         [12]  157 	ld	hl, #___current_base_tile
    00000085 36 04            [12]  158 	ld	(hl), #0x04
                                    159 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:162: __current_base_prop = base_prop;
    00000087 21r00r00         [12]  160 	ld	hl, #___current_base_prop
    0000008A 36 00            [12]  161 	ld	(hl), #0x00
                                    162 ;c:\users\wsajj\gbdev\gbdk\include\gb\metasprites.h:163: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
    0000008C 11 78 78         [12]  163 	ld	de, #0x7878
    0000008F 3E 04            [ 8]  164 	ld	a, #0x04
                                    165 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:34: move_metasprite_ex(boneMS,4,0,4,120,120);
                                    166 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:35: }
    00000091 C3r00r00         [16]  167 	jp	___move_metasprite
                                    168 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:37: void gameFirstLoad(void){
                                    169 ;	---------------------------------
                                    170 ; Function gameFirstLoad
                                    171 ; ---------------------------------
    00000094                        172 _gameFirstLoad::
                                    173 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:39: NR52_REG = 0x80;
    00000094 3E 80            [ 8]  174 	ld	a, #0x80
    00000096 E0r00            [12]  175 	ldh	(_NR52_REG + 0), a
                                    176 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:40: NR50_REG = 0x77; 
    00000098 3E 77            [ 8]  177 	ld	a, #0x77
    0000009A E0r00            [12]  178 	ldh	(_NR50_REG + 0), a
                                    179 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:41: NR51_REG = 0xFF;
    0000009C 3E FF            [ 8]  180 	ld	a, #0xff
    0000009E E0r00            [12]  181 	ldh	(_NR51_REG + 0), a
                                    182 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:43: SHOW_BKG;
    000000A0 F0r00            [12]  183 	ldh	a, (_LCDC_REG + 0)
    000000A2 F6 01            [ 8]  184 	or	a, #0x01
    000000A4 E0r00            [12]  185 	ldh	(_LCDC_REG + 0), a
                                    186 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:44: SHOW_SPRITES;
    000000A6 F0r00            [12]  187 	ldh	a, (_LCDC_REG + 0)
    000000A8 F6 02            [ 8]  188 	or	a, #0x02
    000000AA E0r00            [12]  189 	ldh	(_LCDC_REG + 0), a
                                    190 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:45: DISPLAY_ON;
    000000AC F0r00            [12]  191 	ldh	a, (_LCDC_REG + 0)
    000000AE F6 80            [ 8]  192 	or	a, #0x80
    000000B0 E0r00            [12]  193 	ldh	(_LCDC_REG + 0), a
                                    194 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:47: STAT_REG |= 0x40;
    000000B2 F0r00            [12]  195 	ldh	a, (_STAT_REG + 0)
    000000B4 F6 40            [ 8]  196 	or	a, #0x40
    000000B6 E0r00            [12]  197 	ldh	(_STAT_REG + 0), a
                                    198 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:48: LYC_REG=0;
    000000B8 AF               [ 4]  199 	xor	a, a
    000000B9 E0r00            [12]  200 	ldh	(_LYC_REG + 0), a
                                    201 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:50: add_LCD(bkgInterrupts);
    000000BB 11r00r00         [12]  202 	ld	de, #_bkgInterrupts
    000000BE CDr00r00         [24]  203 	call	_add_LCD
                                    204 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:51: set_interrupts(LCD_IFLAG | VBL_IFLAG);
    000000C1 3E 03            [ 8]  205 	ld	a, #0x03
    000000C3 CDr00r00         [24]  206 	call	_set_interrupts
                                    207 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:54: set_sprite_palette(0,1,ghosty_palettes);
    000000C6 11r00r00         [12]  208 	ld	de, #_ghosty_palettes
    000000C9 D5               [16]  209 	push	de
    000000CA AF               [ 4]  210 	xor	a, a
    000000CB 3C               [ 4]  211 	inc	a
    000000CC F5               [16]  212 	push	af
    000000CD CDr00r00         [24]  213 	call	_set_sprite_palette
    000000D0 E8 04            [16]  214 	add	sp, #4
                                    215 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:55: set_bkg_palette(0,1,bkgd_palettes);
    000000D2 11r00r00         [12]  216 	ld	de, #_bkgd_palettes
    000000D5 D5               [16]  217 	push	de
    000000D6 3E 01            [ 8]  218 	ld	a, #0x01
    000000D8 F5               [16]  219 	push	af
    000000D9 33               [ 8]  220 	inc	sp
    000000DA AF               [ 4]  221 	xor	a, a
    000000DB F5               [16]  222 	push	af
    000000DC 33               [ 8]  223 	inc	sp
    000000DD CDr00r00         [24]  224 	call	_set_bkg_palette
    000000E0 E8 04            [16]  225 	add	sp, #4
                                    226 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:56: setBkgd();
    000000E2 CDr00r00         [24]  227 	call	_setBkgd
                                    228 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:57: setGhosty();
    000000E5 CDr37r00         [24]  229 	call	_setGhosty
                                    230 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:58: setBone();
                                    231 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\GameStates\loadGame.c:61: }
    000000E8 C3r68r00         [16]  232 	jp	_setBone
                                    233 	.area _CODE
                                    234 	.area _INITIALIZER
    00000000                        235 __xinit__spriteSize:
    00000000 08                     236 	.db #0x08	; 8
                                    237 	.area _CABS (ABS)
