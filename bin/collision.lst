                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module collision
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _collisionCheck
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 ;--------------------------------------------------------
                                     16 ; ram data
                                     17 ;--------------------------------------------------------
                                     18 	.area _DATA
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area _INITIALIZED
                                     23 ;--------------------------------------------------------
                                     24 ; absolute external ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area _DABS (ABS)
                                     27 ;--------------------------------------------------------
                                     28 ; global & static initialisations
                                     29 ;--------------------------------------------------------
                                     30 	.area _HOME
                                     31 	.area _GSINIT
                                     32 	.area _GSFINAL
                                     33 	.area _GSINIT
                                     34 ;--------------------------------------------------------
                                     35 ; Home
                                     36 ;--------------------------------------------------------
                                     37 	.area _HOME
                                     38 	.area _HOME
                                     39 ;--------------------------------------------------------
                                     40 ; code
                                     41 ;--------------------------------------------------------
                                     42 	.area _CODE
                                     43 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\collision.c:6: uint8_t collisionCheck(uint8_t x1, uint8_t y1, uint8_t w1, uint8_t h1, uint8_t x2, uint8_t y2, uint8_t w2, uint8_t h2) {
                                     44 ;	---------------------------------
                                     45 ; Function collisionCheck
                                     46 ; ---------------------------------
    00000000                         47 _collisionCheck::
    00000000 E8 FB            [16]   48 	add	sp, #-5
    00000002 57               [ 4]   49 	ld	d, a
    00000003 F8 04            [12]   50 	ldhl	sp,	#4
    00000005 73               [ 8]   51 	ld	(hl), e
                                     52 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\collision.c:8: if ((x1 < (x2+w2)) && ((x1+w1) > x2) && (y1 < (h2+y2)) && ((y1+h1) > y2)) {
    00000006 F8 09            [12]   53 	ldhl	sp,	#9
    00000008 7E               [ 8]   54 	ld	a, (hl)
    00000009 F8 00            [12]   55 	ldhl	sp,	#0
    0000000B 22               [ 8]   56 	ld	(hl+), a
    0000000C 36 00            [12]   57 	ld	(hl), #0x00
    0000000E F8 0B            [12]   58 	ldhl	sp,	#11
    00000010 4E               [ 8]   59 	ld	c, (hl)
    00000011 06 00            [ 8]   60 	ld	b, #0x00
    00000013 E1               [12]   61 	pop	hl
    00000014 E5               [16]   62 	push	hl
    00000015 09               [ 8]   63 	add	hl, bc
    00000016 4D               [ 4]   64 	ld	c, l
    00000017 44               [ 4]   65 	ld	b, h
    00000018 F8 02            [12]   66 	ldhl	sp,	#2
    0000001A 7A               [ 4]   67 	ld	a, d
    0000001B 22               [ 8]   68 	ld	(hl+), a
    0000001C AF               [ 4]   69 	xor	a, a
    0000001D 32               [ 8]   70 	ld	(hl-), a
    0000001E 2A               [ 8]   71 	ld	a, (hl+)
    0000001F 91               [ 4]   72 	sub	a, c
    00000020 7E               [ 8]   73 	ld	a, (hl)
    00000021 98               [ 4]   74 	sbc	a, b
    00000022 56               [ 8]   75 	ld	d, (hl)
    00000023 78               [ 4]   76 	ld	a, b
    00000024 5F               [ 4]   77 	ld	e, a
    00000025 CB 7B            [ 8]   78 	bit	7, e
    00000027 28 07            [12]   79 	jr	Z, 00137$
    00000029 CB 7A            [ 8]   80 	bit	7, d
    0000002B 20 08            [12]   81 	jr	NZ, 00138$
    0000002D BF               [ 4]   82 	cp	a, a
    0000002E 18 05            [12]   83 	jr	00138$
    00000030                         84 00137$:
    00000030 CB 7A            [ 8]   85 	bit	7, d
    00000032 28 01            [12]   86 	jr	Z, 00138$
    00000034 37               [ 4]   87 	scf
    00000035                         88 00138$:
    00000035 D2rBEr00         [16]   89 	jp	NC, 00102$
    00000038 F8 07            [12]   90 	ldhl	sp,	#7
    0000003A 4E               [ 8]   91 	ld	c, (hl)
    0000003B 06 00            [ 8]   92 	ld	b, #0x00
    0000003D F8 02            [12]   93 	ldhl	sp,	#2
    0000003F 2A               [ 8]   94 	ld	a,	(hl+)
    00000040 66               [ 8]   95 	ld	h, (hl)
    00000041 6F               [ 4]   96 	ld	l, a
    00000042 09               [ 8]   97 	add	hl, bc
    00000043 4D               [ 4]   98 	ld	c, l
    00000044 44               [ 4]   99 	ld	b, h
    00000045 F8 00            [12]  100 	ldhl	sp,	#0
    00000047 2A               [ 8]  101 	ld	a, (hl+)
    00000048 91               [ 4]  102 	sub	a, c
    00000049 7E               [ 8]  103 	ld	a, (hl)
    0000004A 98               [ 4]  104 	sbc	a, b
    0000004B 56               [ 8]  105 	ld	d, (hl)
    0000004C 78               [ 4]  106 	ld	a, b
    0000004D 5F               [ 4]  107 	ld	e, a
    0000004E CB 7B            [ 8]  108 	bit	7, e
    00000050 28 07            [12]  109 	jr	Z, 00139$
    00000052 CB 7A            [ 8]  110 	bit	7, d
    00000054 20 08            [12]  111 	jr	NZ, 00140$
    00000056 BF               [ 4]  112 	cp	a, a
    00000057 18 05            [12]  113 	jr	00140$
    00000059                        114 00139$:
    00000059 CB 7A            [ 8]  115 	bit	7, d
    0000005B 28 01            [12]  116 	jr	Z, 00140$
    0000005D 37               [ 4]  117 	scf
    0000005E                        118 00140$:
    0000005E 30 5E            [12]  119 	jr	NC, 00102$
    00000060 F8 0C            [12]  120 	ldhl	sp,	#12
    00000062 3A               [ 8]  121 	ld	a, (hl-)
    00000063 2B               [ 8]  122 	dec	hl
    00000064 4F               [ 4]  123 	ld	c, a
    00000065 06 00            [ 8]  124 	ld	b, #0x00
    00000067 7E               [ 8]  125 	ld	a, (hl)
    00000068 F8 00            [12]  126 	ldhl	sp,	#0
    0000006A 22               [ 8]  127 	ld	(hl+), a
    0000006B 36 00            [12]  128 	ld	(hl), #0x00
    0000006D E1               [12]  129 	pop	hl
    0000006E E5               [16]  130 	push	hl
    0000006F 09               [ 8]  131 	add	hl, bc
    00000070 4D               [ 4]  132 	ld	c, l
    00000071 44               [ 4]  133 	ld	b, h
    00000072 F8 04            [12]  134 	ldhl	sp,	#4
    00000074 3A               [ 8]  135 	ld	a, (hl-)
    00000075 2B               [ 8]  136 	dec	hl
    00000076 22               [ 8]  137 	ld	(hl+), a
    00000077 AF               [ 4]  138 	xor	a, a
    00000078 32               [ 8]  139 	ld	(hl-), a
    00000079 2A               [ 8]  140 	ld	a, (hl+)
    0000007A 91               [ 4]  141 	sub	a, c
    0000007B 7E               [ 8]  142 	ld	a, (hl)
    0000007C 98               [ 4]  143 	sbc	a, b
    0000007D 56               [ 8]  144 	ld	d, (hl)
    0000007E 78               [ 4]  145 	ld	a, b
    0000007F 5F               [ 4]  146 	ld	e, a
    00000080 CB 7B            [ 8]  147 	bit	7, e
    00000082 28 07            [12]  148 	jr	Z, 00141$
    00000084 CB 7A            [ 8]  149 	bit	7, d
    00000086 20 08            [12]  150 	jr	NZ, 00142$
    00000088 BF               [ 4]  151 	cp	a, a
    00000089 18 05            [12]  152 	jr	00142$
    0000008B                        153 00141$:
    0000008B CB 7A            [ 8]  154 	bit	7, d
    0000008D 28 01            [12]  155 	jr	Z, 00142$
    0000008F 37               [ 4]  156 	scf
    00000090                        157 00142$:
    00000090 30 2C            [12]  158 	jr	NC, 00102$
    00000092 F8 08            [12]  159 	ldhl	sp,	#8
    00000094 4E               [ 8]  160 	ld	c, (hl)
    00000095 06 00            [ 8]  161 	ld	b, #0x00
    00000097 F8 02            [12]  162 	ldhl	sp,	#2
    00000099 2A               [ 8]  163 	ld	a,	(hl+)
    0000009A 66               [ 8]  164 	ld	h, (hl)
    0000009B 6F               [ 4]  165 	ld	l, a
    0000009C 09               [ 8]  166 	add	hl, bc
    0000009D 4D               [ 4]  167 	ld	c, l
    0000009E 44               [ 4]  168 	ld	b, h
    0000009F F8 00            [12]  169 	ldhl	sp,	#0
    000000A1 2A               [ 8]  170 	ld	a, (hl+)
    000000A2 91               [ 4]  171 	sub	a, c
    000000A3 7E               [ 8]  172 	ld	a, (hl)
    000000A4 98               [ 4]  173 	sbc	a, b
    000000A5 56               [ 8]  174 	ld	d, (hl)
    000000A6 78               [ 4]  175 	ld	a, b
    000000A7 5F               [ 4]  176 	ld	e, a
    000000A8 CB 7B            [ 8]  177 	bit	7, e
    000000AA 28 07            [12]  178 	jr	Z, 00143$
    000000AC CB 7A            [ 8]  179 	bit	7, d
    000000AE 20 08            [12]  180 	jr	NZ, 00144$
    000000B0 BF               [ 4]  181 	cp	a, a
    000000B1 18 05            [12]  182 	jr	00144$
    000000B3                        183 00143$:
    000000B3 CB 7A            [ 8]  184 	bit	7, d
    000000B5 28 01            [12]  185 	jr	Z, 00144$
    000000B7 37               [ 4]  186 	scf
    000000B8                        187 00144$:
    000000B8 30 04            [12]  188 	jr	NC, 00102$
                                    189 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\collision.c:10: return 1;
    000000BA 3E 01            [ 8]  190 	ld	a, #0x01
    000000BC 18 01            [12]  191 	jr	00107$
    000000BE                        192 00102$:
                                    193 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\collision.c:14: return 0;
    000000BE AF               [ 4]  194 	xor	a, a
    000000BF                        195 00107$:
                                    196 ;C:\Users\wsajj\GBdev\gbdk\_code\gbJam24\source\Mechanic\collision.c:18: }
    000000BF E8 05            [16]  197 	add	sp, #5
    000000C1 E1               [12]  198 	pop	hl
    000000C2 E8 06            [16]  199 	add	sp, #6
    000000C4 E9               [ 4]  200 	jp	(hl)
                                    201 	.area _CODE
                                    202 	.area _INITIALIZER
                                    203 	.area _CABS (ABS)
